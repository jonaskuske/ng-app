{"version":3,"sources":["webpack:///src/environments/environment.prod.ts","webpack:///src/app/shared/services/display-mode.service.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.routing.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/shared/components/top-navigation/top-navigation.module.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","apiUrl","DisplayModeService","document","this","linkElement","querySelector","displayMode","localStorage","getItem","setDisplayMode","mode","href","replace","setItem","TopNavigationComponent","displayModeService","toggleDisplayMode","AppComponent","documentElement","style","Promise","all","then","smoothscrollPolyfill","polyfill","routes","path","loadChildren","m","PortfolioModule","TodoModule","redirectTo","pathMatch","component","PageNotFoundComponent","route","activatedPath","snapshot","url","join","AppRoutingModule","forRoot","scrollPositionRestoration","anchorScrolling","preloadingStrategy","TopNavigationModule","AppModule","developmentMode","compatibility","strictContentSecurityPolicy","selectorOptions","injectContainerState","suppressErrors","key","disabled","bootstrapModule","catch","err","console","error","webpackEmptyAsyncContext","req","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"x","sourcesContent":["export const environment = {\n  production: true,\n  apiUrl: 'https://dmp.hs-bremerhaven.de/wp-json/wp/v2/',\n}\n","import { DOCUMENT } from '@angular/common'\nimport { Inject, Injectable } from '@angular/core'\n\nexport type DisplayMode = 'light' | 'dark'\nexport const STORAGE_KEY = 'displayMode'\n\n@Injectable({ providedIn: 'root' })\nexport class DisplayModeService {\n  public displayMode: DisplayMode\n  private linkElement: HTMLLinkElement\n\n  constructor(@Inject(DOCUMENT) document: Document) {\n    this.linkElement = document.querySelector('link[href*=\"water.css\"]')\n    this.displayMode = (localStorage.getItem(STORAGE_KEY) as DisplayMode) || 'dark'\n    this.setDisplayMode(this.displayMode)\n  }\n\n  setDisplayMode(mode: DisplayMode) {\n    if (this.linkElement) {\n      this.linkElement.href = this.linkElement.href.replace(/light|dark/, mode)\n    }\n    localStorage.setItem(STORAGE_KEY, mode)\n    this.displayMode = mode\n  }\n\n  toggleDisplayMode() {\n    this.setDisplayMode(this.displayMode === 'light' ? 'dark' : 'light')\n  }\n}\n","import { Component } from '@angular/core'\n\nimport { DisplayModeService } from '../../services/display-mode.service'\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.css'],\n})\nexport class TopNavigationComponent {\n  constructor(private displayModeService: DisplayModeService) {}\n\n  get displayMode() {\n    return this.displayModeService.displayMode\n  }\n\n  toggleDisplayMode() {\n    this.displayModeService.toggleDisplayMode()\n  }\n}\n","<header>\n  <h1>Willkommen</h1>\n  <a routerLink=\"/portfolio\">DMP Portfolio</a>\n  &nbsp;\n  <a routerLink=\"/todo\">Todos</a>\n  &nbsp;\n  <a href=\"javascript:void 0\" (click)=\"toggleDisplayMode()\" role=\"button\">\n    {{ displayMode === 'dark' ? 'Heller' : 'Dunkler' }} Modus\n  </a>\n</header>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {\n    const supportsSmoothScroll = 'scrollBehavior' in document.documentElement.style\n    if (!supportsSmoothScroll) {\n      Promise.all([\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-polyfill'),\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-anchor-polyfill'),\n      ]).then(([smoothscrollPolyfill]) => smoothscrollPolyfill.polyfill())\n    }\n  }\n}\n","<app-top-navigation></app-top-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>\n  <p>\n    Gebaut zu Übungszwecken mit Hilfe von <a href=\"https://angular.io/\">Angular</a>. Der Quellcode\n    ist <a href=\"https://github.com/jonaskuske/ng-app\">bei GitHub frei verfügbar</a>.\n  </p>\n</footer>\n","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  {\n    path: 'portfolio',\n    loadChildren: () => import('./portfolio/portfolio.module').then((m) => m.PortfolioModule),\n  },\n  { path: 'todo', loadChildren: () => import('./todo/todo.module').then((m) => m.TodoModule) },\n  { path: '', redirectTo: 'portfolio', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      // relativeLinkResolution: 'legacy',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  public activatedPath: string\n\n  constructor(route: ActivatedRoute) {\n    this.activatedPath = '/' + route.snapshot.url.join('/')\n  }\n\n  ngOnInit() {}\n}\n","<h1>404 – Seite nicht gefunden</h1>\n\n<p>\n  Unter der aufgerufenen Adresse <code>{{ activatedPath }}</code> ist leider nichts zu finden.\n  <br />\n  Bitte überprüfe deine Eingaben und versuche es erneut.\n</p>\n\n<footer>\n  <button routerLink=\"/\">Zur Startseite</button>\n</footer>\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\n\nimport { TopNavigationComponent } from './top-navigation.component'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [TopNavigationComponent],\n  exports: [TopNavigationComponent],\n})\nexport class TopNavigationModule {}\n","import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { environment } from 'src/environments/environment'\n\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin'\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin'\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin'\nimport { NgxsModule } from '@ngxs/store'\n\nimport { AppComponent } from './app.component'\nimport { AppRoutingModule } from './app.module.routing'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\nimport { TopNavigationModule } from './shared/components/top-navigation/top-navigation.module'\n\n@NgModule({\n  declarations: [AppComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    NgxsModule.forRoot([], {\n      developmentMode: !environment.production,\n      compatibility: { strictContentSecurityPolicy: false },\n      selectorOptions: { injectContainerState: false, suppressErrors: false },\n    }),\n    NgxsStoragePluginModule.forRoot({ key: 'todo' }),\n    NgxsRouterPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot({ disabled: !!environment.production }),\n    AppRoutingModule,\n    HttpClientModule,\n    TopNavigationModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nconst logError = (err: Error) => console.error(err)\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(logError)\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}