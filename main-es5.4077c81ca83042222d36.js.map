{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/app.module.routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.ts","webpack:///src/app/shared/services/display-mode.service.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.module.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/shared/components/top-navigation/top-navigation.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","hmr","apiUrl","PageNotFoundComponent","AppRoutingModule","AppComponent","TopNavigationComponent","DisplayModeService","TopNavigationModule","routes","path","loadChildren","then","m","PortfolioModule","TodoModule","redirectTo","pathMatch","component","route","this","activatedPath","snapshot","url","join","forRoot","scrollPositionRestoration","anchorScrolling","preloadingStrategy","linkElement","document","querySelector","displayMode","localStorage","getItem","setDisplayMode","mode","href","replace","setItem","displayModeService","toggleDisplayMode","documentElement","style","Promise","all","polyfill","AppModule","developmentMode","compatibility","strictContentSecurityPolicy","selectorOptions","injectContainerState","suppressErrors","key","disabled","logError","err","console","error","bootstrap","bootstrapModule","plugin","module","catch","webpackEmptyAsyncContext","req","resolve","e","Error","code","keys","exports","id"],"mappings":"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","file":"x","sourcesContent":["export const environment = {\n  production: true,\n  hmr: false,\n  apiUrl: 'https://api.dmp-bremerhaven.de/wp-json/wp/v2/',\n}\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  public activatedPath: string\n\n  constructor(route: ActivatedRoute) {\n    this.activatedPath = '/' + route.snapshot.url.join('/')\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router'\n\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  {\n    path: 'portfolio',\n    loadChildren: () => import('./portfolio/portfolio.module').then(m => m.PortfolioModule),\n  },\n  { path: 'todo', loadChildren: () => import('./todo/todo.module').then(m => m.TodoModule) },\n  { path: '', redirectTo: 'portfolio', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {\n    const supportsSmoothScroll = 'scrollBehavior' in document.documentElement.style\n    if (!supportsSmoothScroll) {\n      Promise.all([\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-polyfill'),\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-anchor-polyfill'),\n      ]).then(([smoothscrollPolyfill]) => smoothscrollPolyfill.polyfill())\n    }\n  }\n}\n","import { Component } from '@angular/core'\nimport { DisplayModeService, DisplayMode } from '../../services/display-mode.service'\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.css'],\n})\nexport class TopNavigationComponent {\n  constructor(private displayModeService: DisplayModeService) {}\n\n  get displayMode() {\n    return this.displayModeService.displayMode\n  }\n\n  toggleDisplayMode() {\n    this.displayModeService.toggleDisplayMode()\n  }\n}\n","import { Injectable } from '@angular/core'\n\nexport type DisplayMode = 'light' | 'dark'\n\n@Injectable({ providedIn: 'root' })\nexport class DisplayModeService {\n  public displayMode: DisplayMode\n  private linkElement: HTMLLinkElement\n\n  constructor() {\n    this.linkElement = document.querySelector('link[href*=\"water.css\"]')\n    this.displayMode = (localStorage.getItem('displayMode') as DisplayMode) || 'dark'\n    this.setDisplayMode(this.displayMode)\n  }\n\n  setDisplayMode(mode: DisplayMode) {\n    this.linkElement.href = this.linkElement.href.replace(/light|dark/, mode)\n    localStorage.setItem('displayMode', mode)\n    this.displayMode = mode\n  }\n  toggleDisplayMode() {\n    this.setDisplayMode(this.displayMode === 'light' ? 'dark' : 'light')\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TopNavigationComponent } from './top-navigation.component'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [TopNavigationComponent],\n  exports: [TopNavigationComponent],\n})\nexport class TopNavigationModule {}\n","<h1>404 – Seite nicht gefunden</h1>\n\n<p>\n  Unter der aufgerufenen Adresse <code>{{ activatedPath }}</code> ist leider nichts zu finden.\n  <br />\n  Bitte überprüfe deine Eingaben und versuche es erneut.\n</p>\n\n<footer>\n  <button routerLink=\"/\">Zur Startseite</button>\n</footer>\n","<header>\n  <h1>Willkommen</h1>\n  <a routerLink=\"/portfolio\">DMP Portfolio</a>\n  &nbsp;\n  <a routerLink=\"/todo\">Todos</a>\n  &nbsp;\n  <a href=\"javascript:void 0\" (click)=\"toggleDisplayMode()\" role=\"button\">\n    {{ displayMode === 'dark' ? 'Heller' : 'Dunkler' }} Modus\n  </a>\n</header>\n","<app-top-navigation></app-top-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>\n  <p>\n    Gebaut zu Übungszwecken mit Hilfe von <a href=\"https://angular.io/\">Angular</a>. Der Quellcode\n    ist <a href=\"https://github.com/jonaskuske/ng-app\">bei GitHub frei verfügbar</a>.\n  </p>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { NgxsModule } from '@ngxs/store'\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin'\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin'\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin'\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { environment } from 'src/environments/environment'\n\nimport { AppRoutingModule } from './app.module.routing'\nimport { TopNavigationModule } from './shared/components/top-navigation/top-navigation.module'\n\nimport { AppComponent } from './app.component'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\n@NgModule({\n  declarations: [AppComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    NgxsModule.forRoot([], {\n      developmentMode: !environment.production,\n      compatibility: { strictContentSecurityPolicy: false },\n      selectorOptions: { injectContainerState: false, suppressErrors: false },\n    }),\n    NgxsStoragePluginModule.forRoot({ key: 'todo' }),\n    NgxsRouterPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot({ disabled: !!environment.production }),\n    AppRoutingModule,\n    HttpClientModule,\n    TopNavigationModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nconst logError = (err: Error) => console.error(err)\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule)\n\nif (environment.hmr) {\n  import('@ngxs/hmr-plugin').then(plugin => plugin.hmr(module, bootstrap).catch(logError))\n} else bootstrap().catch(logError)\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}