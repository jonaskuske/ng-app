{"version":3,"mappings":"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","names":["a","i","s","environment","production","apiUrl","t","STORAGE_KEY","DisplayModeService","constructor","document","this","linkElement","querySelector","displayMode","localStorage","getItem","setDisplayMode","mode","href","replace","setItem","toggleDisplayMode","ɵfac","i0","DOCUMENT","factory","l","TopNavigationComponent","displayModeService","selectors","ctx","AppComponent","ngOnInit","supportsSmoothScroll","documentElement","style","Promise","all","e","then","polyfill","routes","path","loadChildren","m","PortfolioModule","TodoModule","redirectTo","pathMatch","component","route","activatedPath","snapshot","url","join","PageNotFoundComponent","AppRoutingModule","RouterModule","scrollPositionRestoration","anchorScrolling","preloadingStrategy","PreloadAllModules","TopNavigationModule","CommonModule","AppModule","bootstrap","imports","BrowserModule","NgxsModule","developmentMode","compatibility","strictContentSecurityPolicy","selectorOptions","injectContainerState","suppressErrors","NgxsStoragePluginModule","key","NgxsRouterPluginModule","NgxsReduxDevtoolsPluginModule","disabled","HttpClientModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err","console","error"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/environments/environment.prod.ts","webpack:///src/app/shared/services/display-mode.service.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.routing.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/shared/components/top-navigation/top-navigation.module.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","export const environment = {\n  production: true,\n  apiUrl: 'https://dmp.hs-bremerhaven.de/wp-json/wp/v2/',\n}\n","import { DOCUMENT } from '@angular/common'\nimport { Inject, Injectable } from '@angular/core'\n\nexport type DisplayMode = 'light' | 'dark'\nexport const STORAGE_KEY = 'displayMode'\n\n@Injectable({ providedIn: 'root' })\nexport class DisplayModeService {\n  public displayMode: DisplayMode\n  private linkElement: HTMLLinkElement\n\n  constructor(@Inject(DOCUMENT) document: Document) {\n    this.linkElement = document.querySelector('link[href*=\"water.css\"]')\n    this.displayMode = (localStorage.getItem(STORAGE_KEY) as DisplayMode) || 'dark'\n    this.setDisplayMode(this.displayMode)\n  }\n\n  setDisplayMode(mode: DisplayMode) {\n    if (this.linkElement) {\n      this.linkElement.href = this.linkElement.href.replace(/light|dark/, mode)\n    }\n    localStorage.setItem(STORAGE_KEY, mode)\n    this.displayMode = mode\n  }\n\n  toggleDisplayMode() {\n    this.setDisplayMode(this.displayMode === 'light' ? 'dark' : 'light')\n  }\n}\n","import { Component } from '@angular/core'\n\nimport { DisplayModeService } from '../../services/display-mode.service'\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.css'],\n})\nexport class TopNavigationComponent {\n  constructor(private displayModeService: DisplayModeService) {}\n\n  get displayMode() {\n    return this.displayModeService.displayMode\n  }\n\n  toggleDisplayMode() {\n    this.displayModeService.toggleDisplayMode()\n  }\n}\n","<header>\n  <h1>Willkommen</h1>\n  <a routerLink=\"/portfolio\">DMP Portfolio</a>\n  &nbsp;\n  <a routerLink=\"/todo\">Todos</a>\n  &nbsp;\n  <a href=\"javascript:void 0\" (click)=\"toggleDisplayMode()\" role=\"button\">\n    {{ displayMode === 'dark' ? 'Heller' : 'Dunkler' }} Modus\n  </a>\n</header>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {\n    const supportsSmoothScroll = 'scrollBehavior' in document.documentElement.style\n    if (!supportsSmoothScroll) {\n      Promise.all([\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-polyfill'),\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-anchor-polyfill'),\n      ]).then(([smoothscrollPolyfill]) => smoothscrollPolyfill.polyfill())\n    }\n  }\n}\n","<app-top-navigation></app-top-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>\n  <p>\n    Gebaut zu Übungszwecken mit Hilfe von <a href=\"https://angular.io/\">Angular</a>. Der Quellcode\n    ist <a href=\"https://github.com/jonaskuske/ng-app\">bei GitHub frei verfügbar</a>.\n  </p>\n</footer>\n","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  {\n    path: 'portfolio',\n    loadChildren: () => import('./portfolio/portfolio.module').then((m) => m.PortfolioModule),\n  },\n  { path: 'todo', loadChildren: () => import('./todo/todo.module').then((m) => m.TodoModule) },\n  { path: '', redirectTo: 'portfolio', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      // relativeLinkResolution: 'legacy',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  public activatedPath: string\n\n  constructor(route: ActivatedRoute) {\n    this.activatedPath = '/' + route.snapshot.url.join('/')\n  }\n\n  ngOnInit() {}\n}\n","<h1>404 – Seite nicht gefunden</h1>\n\n<p>\n  Unter der aufgerufenen Adresse <code>{{ activatedPath }}</code> ist leider nichts zu finden.\n  <br />\n  Bitte überprüfe deine Eingaben und versuche es erneut.\n</p>\n\n<footer>\n  <button routerLink=\"/\">Zur Startseite</button>\n</footer>\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\n\nimport { TopNavigationComponent } from './top-navigation.component'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [TopNavigationComponent],\n  exports: [TopNavigationComponent],\n})\nexport class TopNavigationModule {}\n","import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { environment } from 'src/environments/environment'\n\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin'\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin'\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin'\nimport { NgxsModule } from '@ngxs/store'\n\nimport { AppComponent } from './app.component'\nimport { AppRoutingModule } from './app.module.routing'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\nimport { TopNavigationModule } from './shared/components/top-navigation/top-navigation.module'\n\n@NgModule({\n  declarations: [AppComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    NgxsModule.forRoot([], {\n      developmentMode: !environment.production,\n      compatibility: { strictContentSecurityPolicy: false },\n      selectorOptions: { injectContainerState: false, suppressErrors: false },\n    }),\n    NgxsStoragePluginModule.forRoot({ key: 'todo' }),\n    NgxsRouterPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot({ disabled: !!environment.production }),\n    AppRoutingModule,\n    HttpClientModule,\n    TopNavigationModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nconst logError = (err: Error) => console.error(err)\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(logError)\n"]}