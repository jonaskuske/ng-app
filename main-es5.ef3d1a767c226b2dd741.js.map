{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/shared/services/display-mode.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.module.ts","webpack:///src/app/app.module.routing.ts","webpack:///src/app/shared/components/top-navigation/top-navigation.component.html","webpack:///src/app/app.component.html","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","hmr","apiUrl","DisplayModeService","AppComponent","TopNavigationComponent","PageNotFoundComponent","AppModule","TopNavigationModule","AppRoutingModule","document","this","linkElement","querySelector","displayMode","localStorage","getItem","setDisplayMode","mode","href","replace","setItem","displayModeService","toggleDisplayMode","documentElement","style","Promise","all","then","polyfill","routes","path","loadChildren","m","PortfolioModule","TodoModule","redirectTo","pathMatch","component","route","activatedPath","snapshot","url","join","forRoot","scrollPositionRestoration","anchorScrolling","preloadingStrategy","developmentMode","compatibility","strictContentSecurityPolicy","selectorOptions","injectContainerState","suppressErrors","key","disabled","logError","err","console","error","bootstrap","bootstrapModule","plugin","module","webpackEmptyAsyncContext","req","resolve","e","Error","code","keys","exports","id"],"mappings":"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","file":"x","sourcesContent":["export const environment = {\r\n  production: true,\r\n  hmr: false,\r\n  apiUrl: 'https://api.dmp-bremerhaven.de/wp-json/wp/v2/',\r\n}\r\n","import { DOCUMENT } from '@angular/common'\r\nimport { Inject, Injectable } from '@angular/core'\r\n\r\nexport type DisplayMode = 'light' | 'dark'\r\nexport const STORAGE_KEY = 'displayMode'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DisplayModeService {\r\n  public displayMode: DisplayMode\r\n  private linkElement: HTMLLinkElement\r\n\r\n  constructor(@Inject(DOCUMENT) document: Document) {\r\n    this.linkElement = document.querySelector('link[href*=\"water.css\"]')\r\n    this.displayMode = (localStorage.getItem(STORAGE_KEY) as DisplayMode) || 'dark'\r\n    this.setDisplayMode(this.displayMode)\r\n  }\r\n\r\n  setDisplayMode(mode: DisplayMode) {\r\n    if (this.linkElement) {\r\n      this.linkElement.href = this.linkElement.href.replace(/light|dark/, mode)\r\n    }\r\n    localStorage.setItem(STORAGE_KEY, mode)\r\n    this.displayMode = mode\r\n  }\r\n\r\n  toggleDisplayMode() {\r\n    this.setDisplayMode(this.displayMode === 'light' ? 'dark' : 'light')\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  ngOnInit() {\r\n    const supportsSmoothScroll = 'scrollBehavior' in document.documentElement.style\r\n    if (!supportsSmoothScroll) {\r\n      Promise.all([\r\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-polyfill'),\r\n        import(/* webpackChunkName: \"smoothscroll\" */ 'smoothscroll-anchor-polyfill'),\r\n      ]).then(([smoothscrollPolyfill]) => smoothscrollPolyfill.polyfill())\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core'\r\n\r\nimport { DisplayModeService } from '../../services/display-mode.service'\r\n\r\n@Component({\r\n  selector: 'app-top-navigation',\r\n  templateUrl: './top-navigation.component.html',\r\n  styleUrls: ['./top-navigation.component.css'],\r\n})\r\nexport class TopNavigationComponent {\r\n  constructor(private displayModeService: DisplayModeService) {}\r\n\r\n  get displayMode() {\r\n    return this.displayModeService.displayMode\r\n  }\r\n\r\n  toggleDisplayMode() {\r\n    this.displayModeService.toggleDisplayMode()\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css'],\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n  public activatedPath: string\r\n\r\n  constructor(route: ActivatedRoute) {\r\n    this.activatedPath = '/' + route.snapshot.url.join('/')\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { HttpClientModule } from '@angular/common/http'\r\nimport { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\n\r\nimport { environment } from 'src/environments/environment'\r\n\r\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin'\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin'\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin'\r\nimport { NgxsModule } from '@ngxs/store'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { AppRoutingModule } from './app.module.routing'\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\r\nimport { TopNavigationModule } from './shared/components/top-navigation/top-navigation.module'\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, PageNotFoundComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxsModule.forRoot([], {\r\n      developmentMode: !environment.production,\r\n      compatibility: { strictContentSecurityPolicy: false },\r\n      selectorOptions: { injectContainerState: false, suppressErrors: false },\r\n    }),\r\n    NgxsStoragePluginModule.forRoot({ key: 'todo' }),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot({ disabled: !!environment.production }),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    TopNavigationModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\n\r\nimport { TopNavigationComponent } from './top-navigation.component'\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [TopNavigationComponent],\r\n  exports: [TopNavigationComponent],\r\n})\r\nexport class TopNavigationModule {}\r\n","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  {\n    path: 'portfolio',\n    loadChildren: () => import('./portfolio/portfolio.module').then((m) => m.PortfolioModule),\n  },\n  { path: 'todo', loadChildren: () => import('./todo/todo.module').then((m) => m.TodoModule) },\n  { path: '', redirectTo: 'portfolio', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<header>\r\n  <h1>Willkommen</h1>\r\n  <a routerLink=\"/portfolio\">DMP Portfolio</a>\r\n  &nbsp;\r\n  <a routerLink=\"/todo\">Todos</a>\r\n  &nbsp;\r\n  <a href=\"javascript:void 0\" (click)=\"toggleDisplayMode()\" role=\"button\">\r\n    {{ displayMode === 'dark' ? 'Heller' : 'Dunkler' }} Modus\r\n  </a>\r\n</header>\r\n","<app-top-navigation></app-top-navigation>\r\n\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n\r\n<footer>\r\n  <p>\r\n    Gebaut zu Übungszwecken mit Hilfe von <a href=\"https://angular.io/\">Angular</a>. Der Quellcode\r\n    ist <a href=\"https://github.com/jonaskuske/ng-app\">bei GitHub frei verfügbar</a>.\r\n  </p>\r\n</footer>\r\n","<h1>404 – Seite nicht gefunden</h1>\r\n\r\n<p>\r\n  Unter der aufgerufenen Adresse <code>{{ activatedPath }}</code> ist leider nichts zu finden.\r\n  <br />\r\n  Bitte überprüfe deine Eingaben und versuche es erneut.\r\n</p>\r\n\r\n<footer>\r\n  <button routerLink=\"/\">Zur Startseite</button>\r\n</footer>\r\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nconst logError = (err: Error) => console.error(err)\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule)\n\nif (environment.hmr) {\n  import('@ngxs/hmr-plugin').then((plugin) => plugin.hmr(module, bootstrap).catch(logError))\n} else bootstrap().catch(logError)\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}