{"version":3,"sources":["webpack:///src/app/portfolio/store/portfolio.actions.ts","webpack:///src/app/shared/util/index.ts","webpack:///src/app/shared/util/index.ts.pre-build-optimizer.js","webpack:///src/app/shared/util/store.ts","webpack:///src/app/portfolio/posts.service.ts","webpack:///src/app/portfolio/store/portfolio.state.ts","webpack:///src/app/shared/components/loading-spinner/loading-spinner.component.ts","webpack:///src/app/portfolio/store/portfolio.selectors.ts","webpack:///src/app/portfolio/posts.service.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/store/portfolio.state.ts.pre-build-optimizer.js","webpack:///src/app/shared/store/selectors.ts","webpack:///src/app/portfolio/store/portfolio.selectors.ts.pre-build-optimizer.js","webpack:///src/app/shared/components/loading-spinner/loading-spinner.component.ts.pre-build-optimizer.js","webpack:///src/app/shared/components/loading-spinner/loading-spinner.component.html","webpack:///src/app/portfolio/views/post-master/post-master.component.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/views/post-master/post-master.component.html","webpack:///src/app/portfolio/views/post-master/post-master.component.ts","webpack:///node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js.pre-build-optimizer.js","webpack:///node_modules/@angular/youtube-player/__ivy_ngcc__/esm2015/youtube-player.js.pre-build-optimizer.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/skipWhile.js.pre-build-optimizer.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/combineLatest.js.pre-build-optimizer.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/publish.js.pre-build-optimizer.js","webpack:///src/app/portfolio/components/showcase/showcase.component.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/components/showcase/showcase.component.html","webpack:///src/app/portfolio/components/showcase/showcase.component.ts","webpack:///src/app/portfolio/components/briefing/briefing.component.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/components/briefing/briefing.component.html","webpack:///src/app/portfolio/components/briefing/briefing.component.ts","webpack:///src/app/portfolio/views/post-detail/post-detail.component.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/views/post-detail/post-detail.component.html","webpack:///src/app/portfolio/portfolio.module.routing.ts","webpack:///src/app/portfolio/views/post-detail/post-detail.component.ts","webpack:///src/app/portfolio/views/post-detail/post-detail.module.ts","webpack:///src/app/portfolio/views/post-master/post-master.module.ts","webpack:///src/app/shared/components/loading-spinner/loading-spinner.module.ts","webpack:///src/app/shared/components/loading-spinner/loading-spinner.module.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/views/post-master/post-master.module.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/views/post-detail/post-detail.module.ts.pre-build-optimizer.js","webpack:///src/app/portfolio/portfolio.module.ts","webpack:///src/app/portfolio/portfolio.module.ts.pre-build-optimizer.js"],"names":["GetPost","id","type","GetPostSuccess","post","GetPostError","error","GetPostPage","page","GetPostPageSuccess","payload","GetPostPageError","isArray","item","Array","serializePageQuery","_a","params","Object","tslib_es6","d","concat","URLSearchParams","createEntity","entity","arguments","length","undefined","lastUpdatedAt","Date","toISOString","isFetching","isRefreshing","isError","uniq","state","some","i","includes","filter","updateEntity","prevEntity","entities","assign","_defineProperty","PostsService","PortfolioState","LoadingSpinnerComponent","PortfolioSelectors","apiUrl","environment","headersGetTotal","headers","Number","get","headersGetTotalPages","getPostPageFromResponse","response","body","total","totalPages","posts_service_PostsService","http","_createClass","key","value","this","_ref","_ref$perPage","perPage","observe","pipe","map","a","ɵfac","t","core","Vb","ɵprov","Hb","token","factory","providedIn","initialState","ids","pagination","postsService","store","ctx","dispatch","existing","getState","setState","toString","ngxs_store_operators","b","getPost","catchError","console","query","existingQuery","pages","patchState","getPosts","pageIds","reduce","obj","p","ngxs_store","k","prototype","name","defaults","selectors_SharedSelectors","stateClass","n","values","keys","portfolio_selectors_PortfolioSelectors","_classCallCheck","options","getPageQuery","flat","getEntities","portfolio_state_PortfolioState","getEntityIds","posts","getEntityList","h","postQueryFn","loading_spinner_component_LoadingSpinnerComponent","ɵcmp","Fb","selectors","decls","vars","consts","template","rf","Rb","pc","Pb","styles","PostMasterComponent_ng_container_2_section_1_Template","Mb","post_r6","$implicit","ctx_r4","bc","zb","ec","title","rendered","jc","getTeaser","acf","beschreibung","fc","PostMasterComponent_ng_container_2_button_4_Template","_r8","Sb","Zb","$event","ic","requestNextPage","PostMasterComponent_ng_container_2_Template","Ob","nc","cc","Nb","ctx_r0","dc","posts$","query$","isFetching$","PostMasterComponent_ng_template_4_p_0_Template","PostMasterComponent_ng_template_4_Template","ctx_r2","PostMasterComponent_p_6_Template","PostMasterComponent","linebreakRegex","post_master_component_PostMasterComponent","postEntitiesByQueryFn$","postsForQuery","postEntities","postQueryFn$","getPostQuery","q","loadPage","text","replace","slice","Lb","oc","_r1","hc","directives","common","j","router","pipes","g","postEntitiesByQueryFn","withLatestFrom","args","source","project","pop","lift","WithLatestFromOperator","YouTubePlayer","observables","subscriber","subscribe","withLatestFrom_WithLatestFromSubscriber","destination","super","toRespond","len","push","observable","add","subscribeToResult","_assertThisInitialized","_this2","outerValue","innerValue","outerIndex","innerIndex","innerSub","found","indexOf","splice","_tryProject","next","result","apply","err","OuterSubscriber","SkipWhileOperator","predicate","skipWhile_SkipWhileSubscriber","skipping","index","tryCallPredicate","Boolean","Subscriber","_c0","DEFAULT_PLAYER_WIDTH","DEFAULT_PLAYER_HEIGHT","isBrowser","window","_ngZone","_videoIdObs","_height","_heightObs","_width","_widthObs","_startSeconds","_endSeconds","_suggestedQuality","ready","stateChange","apiChange","playbackQualityChange","playbackRateChange","_youtubeContainer","_destroyed","_this4","iframeApiAvailableObs","of","YT","showBeforeIframeApiLoads","Error","iframeApiAvailableSubject","Subject","onYouTubeIframeAPIReady","run","take","startWith","videoIdObs","_videoId","widthObs","heightObs","startSecondsObs","endSecondsObs","suggestedQualityObs","playerObs","youtubeContainer","events","notifier","playerOptions","combineLatest","_ref8","_ref9","_slicedToArray","videoId","_ref9$","width","height","util_isArray","call","from","_toConsumableArray","_ref10","_ref11","_ref12","scan","syncPlayerState","distinctUntilChanged","createEventsBoundInZone","mergeMap","player","Observable","emitter","aborted","addEventListener","event","onReady","target","removeEventListener","first","takeUntil","multicast","_player","_ref14","_ref15","setSize","_ref16","_ref17","suggestedQuality","setPlaybackQuality","destroyed","cueOptionsObs","_ref18","_ref19","startSeconds","endSeconds","filteredCueOptions","filterOnOther","getPlayerState","changedVideoId","changedPlayer","_ref20","_ref21","cueOptions","merge","_ref22","_ref23","_ref24","cueVideoById","connect","_this5","_runInZone","emit","onStateChange","onPlaybackQualityChange","onPlaybackRateChange","onError","onApiChange","nativeElement","destroy","callback","playVideo","pauseVideo","stopVideo","seconds","allowSeekAhead","seekTo","mute","unMute","isMuted","volume","setVolume","getVolume","playbackRate","setPlaybackRate","getPlaybackRate","getAvailablePlaybackRates","getVideoLoadedFraction","getCurrentTime","getPlaybackQuality","getAvailableQualityLevels","getDuration","getVideoUrl","getVideoEmbedCode","z","viewQuery","_t","tc","gc","ac","inputs","outputs","encapsulation","changeDetection","_ref26","videoOptions","container","newPlayer","Player","otherObs","filterFn","_ref28","_ref29","other","_ref30","YouTubePlayerModule","ɵmod","Jb","ɵinj","Ib","ShowcaseComponent_img_1_Template","ctx_r26","image","sizes","large","kc","alt","ShowcaseComponent_div_2_Template","ctx_r27","ShowcaseComponent","showcase_component_ShowcaseComponent","url","opts","fuzzy","test","patterns","exec","tokens","split","getYoutubeId","video","tag","document","createElement","src","appendChild","l","youtube_player_YouTubePlayer","BriefingComponent_span_10_Template","BriefingComponent_span_19_Template","BriefingComponent_span_24_Template","BriefingComponent","briefing_component_BriefingComponent","data","modul","semester","erstellungsjahr","rc","studierende","dozierende","PostDetailComponent_ng_container_0_section_1_span_4_span_2_Template","tag_r21","qc","PostDetailComponent_ng_container_0_section_1_span_4_Template","post_r16","ngIf","schlagworte","PostDetailComponent_ng_container_0_section_1_h3_10_Template","PostDetailComponent_ng_container_0_section_1_img_11_Template","image_r23","medium","PostDetailComponent_ng_container_0_section_1_Template","_r25","toTop","post_title","showcaseFormat","showcase","youtube","galerie","PostDetailComponent_ng_container_0_Template","ctx_r10","_r11","post$","PostDetailComponent_ng_template_2_Template","ctx_r12","rawId","PostDetailComponent_ng_template_4_Template","PostDetailComponent","PostDetailModule","PostMasterModule","LoadingSpinnerModule","PortfolioRoutes","forChild","path","component","route","snapshot","paramMap","postEntity$","postEntityByIdFn$","postEntityById","scrollIntoView","block","behavior","_r13","postEntityByIdFn","loading_spinner_module_LoadingSpinnerModule","imports","c","post_master_module_PostMasterModule","providers","post_detail_module_PostDetailModule","youtube_player_YouTubePlayerModule","__webpack_require__","__webpack_exports__","portfolio_module_PortfolioModule","PortfolioModule","e","forFeature"],"mappings":"8/EAIOA,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBC,GAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,GAAAA,UADHD,EAAAE,KAAO,yBADlB,GAIAC,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBC,GAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,KAAAA,UADHD,EAAAD,KAAO,qCADlB,GAIAG,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBJ,EAAmBK,GAAAA,gBAAAA,KAAAA,GAAnBL,KAAAA,GAAAA,EAAmBK,KAAAA,MAAAA,UADtBD,EAAAH,KAAO,mCADlB,GAKAK,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBC,GAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,KAAAA,UADHD,EAAAL,KAAO,8BADlB,GAIAO,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBD,EAAiCE,GAAAA,gBAAAA,KAAAA,GAAjCF,KAAAA,KAAAA,EAAiCE,KAAAA,QAAAA,UADpCD,EAAAP,KAAO,0CADlB,GAIAS,EAAA,WAAA,IAAMA,EAEX,SAAAA,EAAmBH,EAAiCF,GAAAA,gBAAAA,KAAAA,GAAjCE,KAAAA,KAAAA,EAAiCF,KAAAA,MAAAA,UADpCK,EAAAT,KAAO,wCADlB,2BCzBMU,EAAWC,SAAAA,GAAAA,OAA6BC,MAAMF,QAAQC,IAEtDE,EAAsB,SAAAC,GCC/B,IDDuCC,EAAAC,OAAAC,EAAAC,EAAAF,CAAAF,EAAA,CAAA,SAAqB,MAAA,IAAAK,OAAI,IAAIC,gBAAgBL,KEG3EM,EAAe,SAAItB,GAAJ,IAAyBuB,EAAzBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqC,KAArC,MAAyD,CACnFxB,GAAAA,EACAuB,OAAAA,EACAI,eAAe,IAAIC,MAAOC,cAC1BC,YAAAA,EACAC,cAAAA,EACAC,SAAAA,IAGK,SAASC,EAAKrB,GACnB,OAAQsB,SAAAA,GAAAA,OACSvB,EAAQC,GAAQA,EAAKuB,MAAKC,SAAAA,GAAAA,OAAMF,EAAMG,SAASD,MAAMF,EAAMG,SAASzB,IAChEsB,EAEZA,EAAMd,OAAOT,EAAQC,GAAQA,EAAK0B,QAAOF,SAAAA,GAAAA,OAAMF,EAAMG,SAASD,MAAMxB,IAiBxE,SAAS2B,EAAgB9B,GAC9B,OAAQyB,SAAAA,GACN,IAAMM,EAAaN,EAAMO,SAAShC,EAAQT,IAC1C,OAAOiB,OAAPyB,OAAAzB,OAAAyB,OAAA,GACKR,GAAK,CACRO,SAAUxB,OAAFyB,OAAAzB,OAAAyB,OAAA,GAAOR,EAAMO,UAAXE,gBAAA,GAAsBlC,EAAQT,GAAKiB,OAAFyB,OAAAzB,OAAAyB,OAAA,GAAOF,GAAe/B,YChB1DmC,ECAAC,EClBAC,ECAAC,8BHOb,QAAQC,EAAWC,EAAAA,EAAbD,OAEAE,EAAmBC,SAAAA,GAAAA,OAAyBC,OAAOD,EAAQE,IAAI,gBAC/DC,EAAwBH,SAAAA,GAAAA,OAAyBC,OAAOD,EAAQE,IAAI,qBAEpEE,EAA2BC,SAAAA,GAAAA,IACvBC,EAAkBD,EAApBC,KAAQN,EAAYK,EAAdL,QACZ,MAAO,CAAEM,KAAAA,EAAMC,MAAOR,EAAgBC,GAAUQ,WAAYL,EAAqBH,KAI5ES,IAAMhB,EAAN,WACL,SAAAA,EAAoBiB,GAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,KAAAA,EADf,OAAAC,aAAAlB,EAAA,CAAA,CAAAmB,IAAA,UAAAC,MAAA,SAGGhE,GACN,OAAOiE,KAAKJ,KAAKR,IAAVY,GAAAA,OAAuBjB,EAAvBiB,UAAAA,OAAsCjE,MAJ1C,CAAA+D,IAAA,WAAAC,MAAA,SAAAE,GAOsB,IAAhB3D,EAAgB2D,EAAlB3D,KAAkB4D,EAAAD,EAAZE,QAAEA,OAAU,IAAAD,EAAA,GAAAA,EACzB,OAAOF,KAAKJ,KACTR,IADIY,GAAAA,OACWjB,EADXiB,mBAAAA,OACmCG,EADnCH,UAAAA,OACmD1D,GAAQ,CAAE8D,QAAS,aAC1EC,KAAKrD,OAAAsD,EAAAC,EAAAvD,CAAIsC,QAVTX,EAAA,IIAM6B,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GJAtD9B,GAAY+B,EAAAC,GAAAf,EAAAW,KICzB5B,EAAaiC,WAAQF,EAAAG,GAAsB,CAAEC,MJDhCnC,EAAYoC,QAAZpC,EAAY6B,UAAAQ,WADC,YCHpBC,EAAoC,CAAEzC,SAAU,GAAI0C,IAAK,GAAIC,WAAY,QAIlEvC,EAAAA,WACX,SAAAA,EAAoBwC,EAAoCC,GAAAA,gBAAAA,KAAAA,GAApCD,KAAAA,aAAAA,EAAoCC,KAAAA,MAAAA,EAD7CzC,OAAAA,aAAAA,EAAAA,CAAAA,CAAAA,IAAAA,aAAAA,MAAAA,SAGA0C,GACTA,EAAIC,SAAS,IAAIlF,EAAY,CAAEC,KAAM,EAAG6D,QAAS,OAJxCvB,CAAAA,IAAAA,UAAAA,MAAAA,SAQH0C,EARG1C,GAQ2B7C,IAAAA,EAAAA,EAAFA,GAC5ByF,EAAWF,EAAIG,WAAWjD,SAASzC,GACzC,OAAIyF,IAAaA,EAASzD,QAAgBuD,EAAIC,SAAS,IAAItF,EAAeuF,EAASlE,UAEnFgE,EAAII,SFdD,SAAsBpE,GAC3B,IAAMvB,EAAKuB,EAAOvB,GAAG4F,WACrB,OAAO3E,OAAA4E,EAAAC,EAAA7E,CAA4B,CAAEkE,IAAKlD,EAAKjC,GAAKyC,SAAUxB,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GAAS3C,EAAKuB,MAFvE,CEeQN,OAAAyB,OAAAzB,OAAAyB,OAAA,GAAYpB,EAAmBtB,IAAG,CAAE8B,YAAAA,MAGxCmC,KAAKoB,aAAaU,QAAQ/F,GAAIsE,KACnCrD,OAAAsD,EAAAC,EAAAvD,EAAIuC,SAAAA,GAAAA,OAAY+B,EAAIC,SAAS,IAAItF,EAAesD,OAChDvC,OAAA+E,EAAAxB,EAAAvD,EAAWZ,SAAAA,GAAAA,OAASkF,EAAIC,SAAS,IAAIpF,EAAaJ,EAAIK,WAlB/CwC,CAAAA,IAAAA,iBAAAA,MAAAA,SAuBI0C,EAvBJ1C,GAuBkC1C,IAAAA,EAAAA,EAAFA,KACzCoF,EAAII,SAASpD,EAAmBjB,EAAmBnB,EAAKH,GAAIG,OAxBnD0C,CAAAA,IAAAA,eAAAA,MAAAA,SA4BE0C,EA5BF1C,GA4BoCxC,IAAJL,EAAIK,EAANL,GAAMK,EAAAA,EAAFA,MAC3CkF,EAAII,SAASpD,EAAa,CAAEvC,GAAAA,EAAIgC,SAAAA,EAAeF,YAAAA,EAAmBC,cAAAA,KAClEkE,QAAQ5F,MAAMA,KA9BLwC,CAAAA,IAAAA,cAAAA,MAAAA,SAkCC0C,EAlCD1C,GAkC+BtC,IAAAA,EAAAA,EAAFA,KAChC2B,EAAQqD,EAAIG,WACZQ,EAAQpF,EAAmBP,GAE3B4F,EAAgBZ,EAAIG,WAAWN,WAAWc,GAChD,IAAIC,IAAiBA,EAAcC,MAAM7F,EAAKA,MAiB9C,OAhBK4F,GACHZ,EAAIc,WAAW,CACbjB,WAAYnE,OAAFyB,OAAAzB,OAAAyB,OAAA,GAAOR,EAAMkD,YAAXzC,gBAAA,GAAwBuD,EAAQ,CAAExC,MAAO,EAAGC,WAAY,EAAGyC,MAAO,QAIlFb,EAAII,SACF1E,OAAA4E,EAAAC,EAAA7E,CAAM,CACJmE,WAAYnE,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GACTuD,EAAQjF,OAAA4E,EAAAC,EAAA7E,CAAM,CACbmF,MAAOnF,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GAASpC,EAAKA,KAAOU,OAAFyB,OAAAzB,OAAAyB,OAAA,GAAOpB,EAAaf,EAAKA,OAAK,CAAEuB,YAAAA,aAM3DmC,KAAKoB,aAAaiB,SAAS/F,GAAM+D,KACtCrD,OAAAsD,EAAAC,EAAAvD,EAAIuC,SAAAA,GAAAA,OAAY+B,EAAIC,SAAS,IAAIhF,EAAmBD,EAAMiD,OAC1DvC,OAAA+E,EAAAxB,EAAAvD,EAAWZ,SAAAA,GAAAA,OAASkF,EAAIC,SAAS,IAAI9E,EAAiBH,EAAMF,UA1DrDwC,CAAAA,IAAAA,qBAAAA,MAAAA,SA+DQ0C,EA/DR1C,GA+D4CpC,IAANF,EAAME,EAARF,KAAQE,EAAAA,EAAFA,QAC7CyF,EAAQpF,EAAmBP,GAE3BkC,EAAWhC,EAAQgD,KAAKc,KAAI3D,SAAAA,GAAAA,OAAQU,EAAaV,EAAKZ,GAAIY,MAC1D2F,EAAU9F,EAAQgD,KAAKc,KAAI3D,SAAAA,GAAAA,OAAQA,EAAKZ,GAAG4F,cACjDL,EAAII,SFjED,SAAwBlF,GAC7B,IAAMgC,EAAWhC,EAAQ+F,QAAO,SAACC,EAAKlF,GAAN,OAAmBkF,EAAIlF,EAAOvB,IAAMuB,EAASkF,IAAM,IACnF,OAAOxF,OAAA4E,EAAAC,EAAA7E,CAA4B,CACjCkE,IAAKlD,EAAKxB,EAAQ8D,KAAImC,SAAAA,GAAAA,OAAKA,EAAE1G,GAAG4F,eAChCnD,SAAUxB,OAAA4E,EAAAC,EAAA7E,CAAMwB,KAJb,CEiEsBA,IAEzB8C,EAAII,SACF1E,OAAA4E,EAAAC,EAAA7E,CAAM,CACJmE,WAAYnE,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GACTuD,EAAQjF,OAAA4E,EAAAC,EAAA7E,CAAM,CACbyC,MAAOjD,EAAQiD,MACfC,WAAYlD,EAAQkD,WACpByC,MAAOnF,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GAASpC,EAAKA,KAAOU,OAAFyB,OAAA,GAAOpB,EAAaf,EAAKA,KAAMgG,eA5ExD1D,CAAAA,IAAAA,mBAAAA,MAAAA,SAoFM0C,EApFN1C,GAoF0CxC,IAANE,EAAMF,EAARE,KAAQF,EAAAA,EAAFA,MAC3C6F,EAAQpF,EAAmBP,GACjCgF,EAAII,SACF1E,OAAA4E,EAAAC,EAAA7E,CAAM,CACJmE,WAAYnE,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GACTuD,EAAQjF,OAAA4E,EAAAC,EAAA7E,CAAM,CACbmF,MAAOnF,OAAA4E,EAAAC,EAAA7E,CAAA0B,gBAAA,GACJpC,EAAKA,KAAOU,OAAA4E,EAAAC,EAAA7E,CAAM,CAAEe,SAAAA,EAAeD,cAAAA,EAAqBD,YAAAA,aAMnEmE,QAAQ5F,MAAMA,OAjGLwC,EAAAA,II0DE4B,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GJ1D1D7B,GAAc8B,EAAAC,GAAAhB,GAAAe,EAAAC,GAAA+B,EAAAC,KI2D3B/D,EAAegC,WAAQF,EAAAG,GAAsB,CAAEC,MJ3DlClC,EAAcmC,QAAdnC,EAAc4B,YAQzBxD,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOlB,IIuDP8C,EAAegE,UAAW,UAAW,MJvCtC5F,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOf,II2CP2C,EAAegE,UAAW,iBAAkB,MJrC7C5F,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOb,IIyCPyC,EAAegE,UAAW,eAAgB,MJlC3C5F,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOX,IIsCPuC,EAAegE,UAAW,cAAe,MJR1C5F,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOT,IIYPqC,EAAegE,UAAW,qBAAsB,MJUjD5F,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAnC,EAAAvD,CAAOP,IINPmC,EAAegE,UAAW,mBAAoB,MJ7EpChE,EAAc5B,OAAAC,EAAA4E,EAAA7E,CAAA,CAF1BA,OAAA0F,EAAAvE,EAAAnB,CAA2B,CAAE6F,KAAM,YAAaC,SAAU7B,KAE9CrC,IKtBAmE,gHACWC,GACpB,OAAOhG,OAAA0F,EAAAO,EAAAjG,CACL,CAACgG,IACD/E,SAAAA,GAAAA,OAASA,EAAMO,kDAIKwE,GACtB,OAAOhG,OAAA0F,EAAAO,EAAAjG,CACL,CAACgG,IACD/E,SAAAA,GAAAA,OAASjB,OAAOkG,OAAOjF,EAAMO,kDAIbwE,GAClB,OAAOhG,OAAA0F,EAAAO,EAAAjG,CACL,CAACgG,IACD/E,SAAAA,GAAAA,OAASjB,OAAOmG,KAAKlF,EAAMO,2DAIFwE,GAC3B,OAAQV,SAAAA,GAAAA,OACCtF,OAAA0F,EAAAO,EAAAjG,CACL,CAACgG,IACD/E,SAAAA,GAAAA,OAASqE,EAAQhC,KAAIvE,SAAAA,GAAAA,OAAMkC,EAAMO,SAASzC,mBHtB3CqH,IAAMtE,EAAN,WAAA,SAAAA,IAAAuE,gBAAArD,KAAAlB,GAAA,OAAAe,aAAAf,EAAA,KAAA,CAAA,CAAAgB,IAAA,aAAAC,MAAA,SAMa9B,GAChB,OAAOA,EAAMkD,aAPV,CAAArB,IAAA,mBAAAC,MAAA,SAUmBvB,GACtB,OAAQzC,SAAAA,GAAAA,OAAeyC,EAASzC,MAX7B,CAAA+D,IAAA,cAAAC,MAAA,SAccoB,GACjB,OAAQmC,SAAAA,GAAAA,OAAgCnC,EAAWtE,EAAmByG,OAfnE,CAAAxD,IAAA,kBAAAC,MAAA,SAkBkBwD,GACrB,OAAQD,SAAAA,GAAAA,OAAgCC,EAAaD,GAASnB,MAAMmB,EAAQhH,SAnBzE,CAAAwD,IAAA,wBAAAC,MAAA,SAuBHvB,EACA+E,GAEA,OAAQD,SAAAA,GAAAA,OACQtG,OAAOkG,OAAOK,EAAaD,GAASnB,OAAO9D,QAAOoE,SAAAA,GAAAA,OAAMA,EAAE5E,cACtDyC,KAAImC,SAAAA,GAAAA,OAAKA,EAAEnF,UAAQkG,OAC1BlD,KAAIvE,SAAAA,GAAAA,OAAMyC,EAASzC,WA7B7B+C,EAAA,IACEN,SAAWuE,EAAgBU,YAAkBC,GAC7C5E,EAAAoC,IAAM6B,EAAgBY,aAAaD,GACnC5E,EAAA8E,MAAQb,EAAgBc,cAAoBH,GAGnD1G,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAoB,EAAA9G,CAAS,CAAC0G,KImBV5E,EAAoB,aAAc,MJdnC9B,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAoB,EAAA9G,CAAS,CAAC8B,EAAmBN,YIkB7BM,EAAoB,mBAAoB,MJbzC9B,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAoB,EAAA9G,CAAS,CAAC8B,EAAmBqC,cIiB7BrC,EAAoB,cAAe,MJZpC9B,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAoB,EAAA9G,CAAS,CAAC8B,EAAmBiF,eIgB7BjF,EAAoB,kBAAmB,MJXxC9B,OAAAC,EAAA4E,EAAA7E,CAAA,CADCA,OAAA0F,EAAAoB,EAAA9G,CAAS,CAAC8B,EAAmBN,SAAUM,EAAmBiF,eIe1DjF,EAAoB,wBAAyB,SLpCzCkF,IAAMnF,EAAN,WACL,SAAAA,IAAAwE,gBAAArD,KAAAnB,GADK,OAAAgB,aAAAhB,EAAA,CAAA,CAAAiB,IAAA,WAAAC,MAAA,gBAAAlB,EAAA,IMAiB2B,UAAO,SAAyCC,GAAK,OAAO,IAAKA,GNA5E5B,IMCbA,EAAwBoF,UAAOvD,EAAAwD,GAAqB,CAAElI,KNDzC6C,EAAuBsF,UAAA,CAAA,CAAA,wBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,OAAA,MAAA,cAAA,OAAA,EAAA,uBAAA,EAAA,aAAA,WAAAC,SAAA,SAAAC,EAAAlD,GAAA,EAAAkD,IOPpC9D,EAAA+D,GAAA,EAAA,OAAA,GACG/D,EAAAgE,GAAA,EAAA,UAAChE,EAAAiE,ODWKC,OAAQ,CAAC,olBEDlB,SAASC,EAAsDL,EAAIlD,GASjE,GATiF,EAALkD,ICT5E9D,EAAA+D,GAAA,EAAA,WACE/D,EAAAoE,GAAA,EAAA,KAAA,GACApE,EAAAoE,GAAA,EAAA,IAAA,GACApE,EAAA+D,GAAA,EAAA,IAAA,GAA8B/D,EAAAgE,GAAA,EAAA,0BAAiBhE,EAAAiE,KAC/CjE,EAAAoE,GAAA,EAAA,MACFpE,EAAAiE,MDaS,EAALH,EAAQ,CACV,IAAMO,EAAUzD,EAAI0D,UACdC,EAASvE,EAAAwE,GAAiB,GCnB5BxE,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAAL,EAAAM,MAAAC,SAAA5E,EAAA6E,IACD7E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAAH,EAAAO,UAAAT,EAAAU,IAAAC,cAAAhF,EAAA6E,IACA7E,EAAAyE,GAAA,GAAAzE,EAAAiF,GAAA,aAAAZ,EAAAhJ,KDyBP,SAAS6J,EAAqDpB,EAAIlD,GAAO,GAAS,EAALkD,EAAQ,CACjF,IAAMqB,EAAMnF,EAAAoF,KCrBZpF,EAAA+D,GAAA,EAAA,SAAA,GAEE/D,EAAAqF,GAAA,SAAA,SAAAC,GAAA,OAAAtF,EAAAuF,GAAAJ,GAAAnF,EAAAwE,GAAA,GAAAgB,qBAGAxF,EAAAgE,GAAA,EAAA,mBACFhE,EAAAiE,MDqBJ,SAASwB,EAA4C3B,EAAIlD,GAUvD,GAVuE,EAALkD,ICpCpE9D,EAAA0F,GAAA,GACE1F,EAAA2F,GAAA,EAAAxB,EAAA,EAAA,EAAA,UAAA,GDsCEnE,EAAA4F,GAAU,EAAG,SC/Bf5F,EAAA+D,GAAA,EAAA,SAAA,GACE/D,EAAA2F,GAAA,EAAAT,EAAA,EAAA,EAAA,SAAA,GDiCAlF,EAAA4F,GAAU,EAAG,SACb5F,EAAA4F,GAAU,EAAG,SC3Bf5F,EAAAiE,KACFjE,EAAA6F,MD6BW,EAAL/B,EAAQ,CACV,IAAMgC,EAAS9F,EAAAwE,KC9CRxE,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAA1E,EAAA+F,GAAA,EAAA,EAAAD,EAAAE,SASLhG,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAA1E,EAAA+F,GAAA,EAAA,EAAAD,EAAAG,QAAAjH,WAAA8G,EAAArF,WAAA7E,OAAA,IAAAoE,EAAA+F,GAAA,EAAA,EAAAD,EAAAI,eD2CN,SAASC,EAA+CrC,EAAIlD,GAAgB,EAALkD,ICjCrE9D,EAAA+D,GAAA,EAAA,IAAA,GACE/D,EAAAgE,GAAA,EAAA,+BAA0BhE,EAAA+D,GAAA,EAAA,OAAA,IAAoD/D,EAAAgE,GAAA,EAAA,gBAAEhE,EAAAiE,KAClFjE,EAAAiE,MDuCF,SAASmC,EAA2CtC,EAAIlD,GAGtD,GAHsE,EAALkD,ICzCjE9D,EAAA2F,GAAA,EAAAQ,EAAA,EAAA,EAAA,IAAA,GD2CEnG,EAAA4F,GAAU,EAAG,UACN,EAAL9B,EAAQ,CACV,IAAMuC,EAASrG,EAAAwE,KC7CdxE,EAAA0E,GAAA,QAAA,IAAA1E,EAAA+F,GAAA,EAAA,EAAAM,EAAAH,eDgDL,SAASI,EAAiCxC,EAAIlD,GAAgB,EAALkD,IC3CzD9D,EAAA+D,GAAA,EAAA,IAAA,GACE/D,EAAAgE,GAAA,EAAA,gCAA2BhE,EAAAoE,GAAA,EAAA,uBAC7BpE,EAAAiE,MClBA,IAUasC,EAVPC,EAAiB,uBAUhBC,IAAMF,EAAN,WASL,SAAAA,EAAoB5F,GAAAA,IAAAA,EAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,MAAAA,EANpBrB,KAAAmB,WAAiC,CAAE7E,KAAM,EAAG6D,QAAS,GAOnDH,KAAK0G,OAAS1G,KAAKoH,uBAAuB/G,KACxCrD,OAAAsD,EAAAC,EAAAvD,EAAIqK,SAAAA,GAAAA,OAAiBA,EAAcrH,EAAKmB,eACxCnE,OAAAsD,EAAAC,EAAAvD,EAAIsK,SAAAA,GAAAA,OAAgBA,EAAahH,KAAImC,SAAAA,GAAAA,OAAKA,EAAEnF,cAE9C0C,KAAK2G,OAAS3G,KAAKuH,aAAalH,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAIwK,SAAAA,GAAAA,OAAgBA,EAAaxH,EAAKmB,gBAC3EnB,KAAK4G,YAAc5G,KAAK2G,OAAOtG,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAIyK,SAAAA,GAAAA,OAAKzK,OAAOkG,OAAOuE,EAAEtF,OAAOjE,MAAKuE,SAAAA,GAAAA,OAAKA,EAAE5E,kBAf7E,OAAAgC,aAAAoH,EAAA,CAAA,CAAAnH,IAAA,WAAAC,MAAA,WAmBHC,KAAK0H,aAnBF,CAAA5H,IAAA,WAAAC,MAAA,WAsBHC,KAAKqB,MAAME,SAAS,IAAIlF,EAAY2D,KAAKmB,eAtBtC,CAAArB,IAAA,kBAAAC,MAAA,WAyBHC,KAAKmB,WAAW7E,OAChB0D,KAAK0H,aA1BF,CAAA5H,IAAA,YAAAC,MAAA,SA6BK4H,GAGR,OAFAA,EAAOA,EAAKC,QAAQV,EAAgB,KAE3B1J,OAAS,IAAYmK,EAA9B,GAAAxK,OACUwK,EAAKE,MAAM,EAAG,KADxB,WAhCGZ,EAAA,IFiFazG,UAAO,SAAqCC,GAAK,OAAO,IAAKA,GEjFpEwG,GAAmBvG,EAAAoH,GAAApF,EAAAC,KFkFhCsE,EAAoBhD,UAAOvD,EAAAwD,GAAqB,CAAElI,KElFrCiL,EAAmB9C,UAAA,CAAA,CAAA,oBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,OAAA,YAAA,CAAA,UAAA,IAAA,CAAA,QAAA,0BAAA,EAAA,QAAA,CAAA,EAAA,QAAA,WAAA,CAAA,EAAA,uBAAA,CAAA,OAAA,SAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,aAAA,CAAA,EAAA,cAAA,CAAA,OAAA,SAAA,EAAA,SAAA,CAAA,EAAA,2BAAA,CAAA,cAAA,OAAA,EAAA,aAAA,WAAAC,SAAA,SAAAC,EAAAlD,GF2F1B,GE3F0B,EAAAkD,IDpBhC9D,EAAA+D,GAAA,EAAA,MAAI/D,EAAAgE,GAAA,EAAA,iBAAahE,EAAAiE,KACjBjE,EAAA2F,GAAA,EAAAF,EAAA,EAAA,EAAA,eAAA,GD0GQzF,EAAA4F,GAAU,EAAG,SCvFrB5F,EAAA2F,GAAA,EAAAS,EAAA,EAAA,EAAA,cAAA,KAAA,EAAApG,EAAAqH,IAMArH,EAAA2F,GAAA,EAAAW,EAAA,EAAA,EAAA,IAAA,GDoFQtG,EAAA4F,GAAU,EAAG,UACN,EAAL9B,EAAQ,CACV,IAAMwD,EAAMtH,EAAAuH,GAAe,GC/GrBvH,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAA1E,EAAA+F,GAAA,EAAA,EAAAnF,EAAAoF,QAAAlJ,OAAAkD,CAA6C,WAAAsH,GAyBxDtH,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAA1E,EAAA+F,GAAA,EAAA,EAAAnF,EAAAsF,gBD2FMsB,WAAY,CAACC,EAAAC,EAASD,EAAAhK,EAAYkK,EAAA1F,EAAuBqB,GAA6BsE,MAAO,CAACH,EAAAtG,GAAe+C,OAAQ,CAAC,yREhGrF5H,OAAAC,EAAA4E,EAAA7E,CAAA,CAAvCA,OAAA0F,EAAA6F,EAAAvL,CAAOoG,EAAmBW,cFmG1BkD,EAAoBrE,UAAW,oBAAA,GElGkB5F,OAAAC,EAAA4E,EAAA7E,CAAA,CAAjDA,OAAA0F,EAAA6F,EAAAvL,CAAOoG,EAAmBoF,wBFqG1BvB,EAAoBrE,UAAW,8BAAA,qLGzH3B,SAAS6F,KAAkBC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAC9B,OAAQC,SAAAA,GACJ,IAAIC,EAKJ,MAJqC,mBAA1BF,EAAKA,EAAKlL,OAAS,KAC1BoL,EAAUF,EAAKG,OAGZF,EAAOG,KAAK,IAAIC,GADHL,EACuCE,SCwB7DI,GDrBAD,cACF,SAAAA,EAAYE,EAAaL,GAAAA,gBAAAA,KAAAA,GACrB5I,KAAKiJ,YAAcA,EACnBjJ,KAAK4I,QAAUA,oDAEdM,EAAYP,GACb,OAAOA,EAAOQ,UAAU,IAAIC,GAAyBF,EAAYlJ,KAAKiJ,YAAajJ,KAAK4I,mBAG1FQ,eACF,SAAAA,EAAYC,EAAaJ,EAAaL,GAAAA,IAAAA,EAAAA,gBAAAA,KAAAA,IAClCU,EAAAA,2BAAAA,KAAAA,gBAAAA,GAAAA,KAAAA,KAAMD,KACDJ,YAAcA,EACnBjJ,EAAK4I,QAAUA,EACf5I,EAAKuJ,UAAY,GACjB,IAAMC,EAAMP,EAAYzL,OACxBwC,EAAKkD,OAAS,IAAItG,MAAM4M,GACxB,IAAK,IAAIrL,EAAI,EAAGA,EAAIqL,EAAKrL,IACrB6B,EAAKuJ,UAAUE,KAAKtL,GAExB,IAAK,IAAIA,EAAI,EAAGA,EAAIqL,EAAKrL,IAAK,CAC1B,IAAIuL,EAAaT,EAAY9K,GAC7B6B,EAAK2J,IAAI3M,OAAA4M,GAAArJ,EAAAvD,CAAA6M,uBAAAC,GAAwBJ,EAAYA,EAAYvL,IAZ3ByK,OAAAA,yEAe3BmB,EAAYC,EAAYC,EAAYC,EAAYC,GACvDnK,KAAKkD,OAAO+G,GAAcD,EAC1B,IAAMT,EAAYvJ,KAAKuJ,UACvB,GAAIA,EAAU/L,OAAS,EAAG,CACtB,IAAM4M,EAAQb,EAAUc,QAAQJ,IACjB,IAAXG,GACAb,EAAUe,OAAOF,EAAO,4EAM9BrK,GACF,GAA8B,IAA1BC,KAAKuJ,UAAU/L,OAAc,CAC7B,IAAMkL,EAAAA,CAAQ3I,GAAR2I,OAAAA,mBAAkB1I,KAAKkD,SACzBlD,KAAK4I,QACL5I,KAAKuK,YAAY7B,GAGjB1I,KAAKqJ,YAAYmB,KAAK9B,wCAItBA,GACR,IAAI+B,EACJ,IACIA,EAASzK,KAAK4I,QAAQ8B,MAAM1K,KAAM0I,GAEtC,MAAOiC,GAEH,YADA3K,KAAKqJ,YAAYjN,MAAMuO,GAG3B3K,KAAKqJ,YAAYmB,KAAKC,UAhDSG,GAAAA,4DEjBvC,QAAMC,cACF,SAAAA,EAAYC,GAAAA,gBAAAA,KAAAA,GACR9K,KAAK8K,UAAYA,oDAEhB5B,EAAYP,GACb,OAAOA,EAAOQ,UAAU,IAAI4B,GAAoB7B,EAAYlJ,KAAK8K,qBAGnEC,eACF,SAAAA,EAAY1B,EAAayB,GAAAA,IAAAA,EAAAA,OAAAA,gBAAAA,KAAAA,IACrBxB,EAAAA,2BAAAA,KAAAA,gBAAAA,GAAAA,KAAAA,KAAMD,KACDyB,UAAYA,EACjB9K,EAAKgL,UAAAA,EACLhL,EAAKiL,MAAQ,EAJQH,oEAMnB/K,GACF,IAAMsJ,EAAcrJ,KAAKqJ,YACrBrJ,KAAKgL,UACLhL,KAAKkL,iBAAiBnL,GAErBC,KAAKgL,UACN3B,EAAYmB,KAAKzK,4CAGRA,GACb,IACI,IAAM0K,EAASzK,KAAK8K,UAAU/K,EAAOC,KAAKiL,SAC1CjL,KAAKgL,SAAWG,QAAQV,GAE5B,MAAOE,GACH3K,KAAKqJ,YAAYjN,MAAMuO,WAtBDS,GAAAA,gBDM5BC,GAAM,CAAC,oBACPC,GAAuB,IAEvBC,GAAwB,IAMxBC,GAA8B,iBAAXC,UAAyBA,YAM5CzC,cAIF,SAAAA,EAAY0C,GAAAA,gBAAAA,KAAAA,GACR1L,KAAK0L,QAAUA,EACf1L,KAAK2L,YAAc,IAAIjL,EAAAuC,EACvBjD,KAAK4L,QAAUL,GACfvL,KAAK6L,WAAa,IAAInL,EAAAuC,EACtBjD,KAAK8L,OAASR,GACdtL,KAAK+L,UAAY,IAAIrL,EAAAuC,EACrBjD,KAAKgM,cAAgB,IAAItL,EAAAuC,EACzBjD,KAAKiM,YAAc,IAAIvL,EAAAuC,EACvBjD,KAAKkM,kBAAoB,IAAIxL,EAAAuC,EAI7BjD,KAAKmM,MAAQ,IAAIzL,EAAAuC,EACjBjD,KAAKoM,YAAc,IAAI1L,EAAAuC,EACvBjD,KAAK5D,MAAQ,IAAIsE,EAAAuC,EACjBjD,KAAKqM,UAAY,IAAI3L,EAAAuC,EACrBjD,KAAKsM,sBAAwB,IAAI5L,EAAAuC,EACjCjD,KAAKuM,mBAAqB,IAAI7L,EAAAuC,EAC9BjD,KAAKwM,kBAAoB,IAAI9L,EAAAuC,EAC7BjD,KAAKyM,WAAa,IAAI/L,EAAAuC,0DAoE1B,IAAAyJ,EAAA1M,KAEI,GAAKwL,GAAL,CAIA,IAAImB,EAAwB3P,OAAA4P,EAAArM,EAAAvD,EAAA,GAC5B,IAAKyO,OAAOoB,GAAI,CACZ,GAAI7M,KAAK8M,yBACL,MAAM,IAAIC,MAAM,mMAKpB,IAAMC,EAA4B,IAAIC,EAAAA,EACtCxB,OAAOyB,wBAA0B,WAI7BlN,EAAK0L,QAAQyB,KAAI,WAAA,OAGXH,EAA0BxC,MAAAA,OAEpCmC,EAAwBK,EAA0B3M,KAAKrD,OAAAoQ,EAAA7M,EAAAvD,CAAK,GAAIA,OAAAqQ,GAAA9M,EAAAvD,EAAA,IAIpE,IAAMsQ,EAAatN,KAAK2L,YAAYtL,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,CAAUgD,KAAKuN,WAElDC,EAAWxN,KAAK+L,UAAU1L,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,CAAUgD,KAAK8L,SAE9C2B,EAAYzN,KAAK6L,WAAWxL,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,CAAUgD,KAAK4L,UAEhD8B,EAAkB1N,KAAKgM,cAAc3L,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,MAAA,IAE1C2Q,EAAgB3N,KAAKiM,YAAY5L,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,MAAA,IAEtC4Q,EAAsB5N,KAAKkM,kBAAkB7L,KAAKrD,OAAAqQ,GAAA9M,EAAAvD,MAAA,IAKlD6Q,EA6Zd,SAAgCC,EAAkBR,EAAYX,EAAuBa,EAAUC,EAAWM,GAEtG,IAe6BC,ECrlBPlD,EDskBhBmD,EAAgBX,EACjBjN,KAAKoI,GAAezL,OAAAkR,EAAArM,EAAA7E,CAAc,CAACwQ,EAAUC,KAAczQ,OAAAsD,EAAAC,EAAAvD,EAAI,SAAAmR,GAAA,IAAAC,EAAAC,eAAAF,EAAA,GAIlEG,EAJkEF,EAAA,GAAAG,EAAAF,eAAAD,EAAA,GAAA,GAIxDI,EAJwDD,EAAA,GAIjDE,EAJiDF,EAAA,GAAA,OAIpCD,EAAU,CAAGA,QAAAA,EAASE,MAAAA,EAAOC,OAAAA,EAAQV,OAAAA,QAAAA,MACrE,OAAO/Q,OAAAkR,EAAArM,EAAA7E,CAAc,CAAC8Q,EAAkBG,IACnC5N,MAQwB2N,EARKrB,EAS3B3P,OAAAqD,EAAAE,EAAAvD,CEnlBJ,WAA0BiM,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAC7B,IAAIL,EAAU,KAOd,MANmD,mBAAxCK,EAAYA,EAAYzL,OAAS,KACxCoL,EAAUK,EAAYJ,OAEC,IAAvBI,EAAYzL,QAAgBR,OAAA0R,GAAAnO,EAAAvD,CAAQiM,EAAY,MAChDA,EAAcA,EAAY,GAAGpB,SAEzBc,SAAAA,GAAAA,OAAWA,EAAOG,KAAK6F,KAAK3R,OAAA4R,GAAArO,EAAAvD,CAAA,CAAM2L,GAANxL,OAAA0R,mBAAiB5F,KAAe,IAAIiF,EAAA3N,EAAsBqI,KAR3F,CFmlByBoF,ICtlBNlD,EDslB2B,SAAAgE,GAAA,IAAAC,EAAAV,eAAAS,EAAA,GAAA,OAAAC,EAAA,IAAAA,EAAA,ICrlBzCpG,SAAAA,GAAAA,OAAWA,EAAOG,KAAK,IAAI+B,GAAkBC,MDylBb9N,OAAAsD,EAAAC,EAAAvD,EAAI,SAAAgS,GAAA,OAAAX,eAAAW,EAAA,GAAA,QAbchS,OAAAiS,GAAA1O,EAAAvD,CAAKkS,QAAAA,GAA6BlS,OAAAmS,GAAA5O,EAAAvD,IAThG,CA7ZiDgD,KAAKwM,kBAAmBc,EAAYX,EAAuBa,EAAUC,EAAWzN,KAAKoP,2BAA2B/O,KAiWtJrD,OAAAqS,GAAA9O,EAAAvD,EAIPsS,SAAAA,GAAAA,OACSA,EAGD,oBAAqBA,EACdtS,OAAA4P,EAAArM,EAAAvD,CAAGsS,GAYtB,SAA2BA,GACvB,OAAO,IAAIC,EAAAA,GAIXC,SAAAA,GAEI,IAAIC,GAAAA,EAcJ,OADAH,EAAOI,iBAAiB,WAPvBC,SAJKC,EAILD,GACOF,IAGJE,EAAME,OAAOC,oBAAoB,UAAWF,GAC5CJ,EAAQhF,KAAKmF,EAAME,YAGhB,WAIHJ,GAAAA,MAzBZ,CATiCH,GACpBjP,KAAKrD,OAAA+S,GAAAxP,EAAAvD,GAASA,OAAAqQ,GAAA9M,EAAAvD,MAAA,IAPRA,OAAA4P,EAAArM,EAAAvD,MAAA,MAvWqKA,OAAAgT,GAAAzP,EAAAvD,CAAUgD,KAAKyM,YGnK/LzP,OAAAiT,GAAA1P,EAAAvD,CAAU,IAAIiQ,EAAAA,IHqKdY,EAAU1E,WAIVmG,SAAAA,GAAAA,OAAUtP,EAAKkQ,QAAUZ,KA6TjC,SAA0BzB,EAAWL,EAAUC,GACpCzQ,OAAAkR,EAAArM,EAAA7E,CAAc,CAAC6Q,EAAWL,EAAUC,IACtCtE,WAAU,SAAAgH,GAAA,IAAAC,EAAA/B,eAAA8B,EAAA,GAIbb,EAJac,EAAA,GAIL5B,EAJK4B,EAAA,GAIE3B,EAJF2B,EAAA,GAAA,OAIcd,GAAUA,EAAOe,QAAQ7B,EAAOC,MANjE,CA5TyBZ,EAAWL,EAAUC,GA0U9C,SAAsCI,EAAWD,GACtC5Q,OAAAkR,EAAArM,EAAA7E,CAAc,CACjB6Q,EACAD,IACDzE,WAAU,SAAAmH,GAAA,IAAAC,EAAAlC,eAAAiC,EAAA,GAIXhB,EAJWiB,EAAA,GAIHC,EAJGD,EAAA,GAAA,OAImBjB,GAAUkB,GAAoBlB,EAAOmB,mBAAmBD,MAR5F,CAzUqC3C,EAAWD,GAmdhD,SAA0BC,EAAWP,EAAYI,EAAiBC,EAAeC,EAAqB8C,GAElG,IAAMC,EAAgB3T,OAAAkR,EAAArM,EAAA7E,CAAc,CAAC0Q,EAAiBC,IACjDtN,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAI,SAAA4T,GAAA,IAAAC,EAAAxC,eAAAuC,EAAA,GAAA,MAIkB,CAAGE,aAJrBD,EAAA,GAImCE,WAJnCF,EAAA,QAORG,EAAqBL,EACtBtQ,KAAK4Q,GAAcpD,GAIxByB,SAAAA,GAAAA,QAAYA,IA2ChB,SAA0BA,GACtB,OAAgF,IAAzE,EAAE,EAAmB,GAAcjF,QAAQiF,EAAO4B,kBAD7D,CA3C4C5B,OAIlC6B,EAAiB7D,EAClBjN,KAAK4Q,GAAcpD,GAAW,SAKlCyB,EAAQhB,GAL0B,QAKZgB,GAAUA,EAAOhB,UAAYA,MAG9C8C,EAAgBvD,EAAUxN,KAAK4Q,GAAcjU,OAAAkR,EAAArM,EAAA7E,CAAc,CAACsQ,EAAYqD,KAAiB,SAAAU,EAKvE/B,GALuE,IAAAgC,EAAAjD,eAAAgD,EAAA,GAK7F/C,EAL6FgD,EAAA,GAKpFC,EALoFD,EAAA,GAAA,SAK1DhC,GAChChB,GAAWgB,EAAOhB,UAAaiD,EAAWT,eAAkBS,EAAWR,gBAC5E/T,OAAAwU,EAAAjR,EAAAvD,CAAMoU,EAAeD,EAAgBH,GAChC3Q,KAAKoI,GAAezL,OAAAkR,EAAArM,EAAA7E,CAAc,CAAC6Q,EAAWP,EAAYqD,EAAe/C,KAAwB5Q,OAAAsD,EAAAC,EAAAvD,EAAI,SAAAyU,GAAA,IAAAC,EAAArD,eAAAoD,EAAA,GAAA,OAAAC,EAAA,GAAAA,EAAA,MAI/E1U,OAAAgT,GAAAzP,EAAAvD,CAAU0T,IAChCvH,WAAU,SAAAwI,GAIgBnB,IAAAA,EAAAA,eAAAA,EAAAA,GAA7BlB,EAA6BkB,EAAAA,GAArBlC,EAAqBkC,EAAAA,GAAZe,EAAYf,EAAAA,GAAAA,EAAAA,EAAAA,GACtBlC,GAAYgB,IAGjBA,EAAOhB,QAAUA,EACjBgB,EAAOsC,aAAa5U,OAAOyB,OAAO,CAAE6P,QAAAA,EAChCkC,iBAAAA,GAAoBe,QAnDhC,CAldyB1D,EAAWP,EAAYI,EAAiBC,EAAeC,EAAqB5N,KAAKyM,YAElGoB,EAAiCgE,6DAKrC,IAAAC,EAAA9R,KACI,MAAO,CACH4P,QAAS5P,KAAK+R,YAIbpC,SAAAA,GAAAA,OAAU3P,EAAKmM,MAAM6F,KAAKrC,MAC3BsC,cAAejS,KAAK+R,YAInBpC,SAAAA,GAAAA,OAAU3P,EAAKoM,YAAY4F,KAAKrC,MACjCuC,wBAAyBlS,KAAK+R,YAI7BpC,SAAAA,GAAAA,OAAU3P,EAAKsM,sBAAsB0F,KAAKrC,MAC3CwC,qBAAsBnS,KAAK+R,YAI1BpC,SAAAA,GAAAA,OAAU3P,EAAKuM,mBAAmByF,KAAKrC,MACxCyC,QAASpS,KAAK+R,YAIbpC,SAAAA,GAAAA,OAAU3P,EAAK5D,MAAM4V,KAAKrC,MAC3B0C,YAAarS,KAAK+R,YAIjBpC,SAAAA,GAAAA,OAAU3P,EAAKqM,UAAU2F,KAAKrC,iDAOnC3P,KAAKwM,kBAAkBwF,KAAKhS,KAAK8N,iBAAiBwE,qDAM9CtS,KAAKkQ,UACLlQ,KAAKkQ,QAAQqC,UACb9G,OAAOyB,6BAAAA,EACPlN,KAAKyM,WAAWuF,2CASbQ,GAAAA,IAAAA,EAAAA,KACP,OAAO,WAIH9J,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACA1I,EAAK0L,QAAQyB,KAAI,WAAA,OAGXqF,EAAAA,WAAAA,EAAY9J,2CASlB1I,KAAKkQ,SACLlQ,KAAKkQ,QAAQuC,iDAQbzS,KAAKkQ,SACLlQ,KAAKkQ,QAAQwC,iDAQb1S,KAAKkQ,SACLlQ,KAAKkQ,QAAQyC,2CASdC,EAASC,GACR7S,KAAKkQ,SACLlQ,KAAKkQ,QAAQ4C,OAAOF,EAASC,kCAQ7B7S,KAAKkQ,SACLlQ,KAAKkQ,QAAQ6C,wCAQb/S,KAAKkQ,SACLlQ,KAAKkQ,QAAQ8C,2CAQjB,OAAQhT,KAAKkQ,SAAWlQ,KAAKkQ,QAAQ+C,4CAO/BC,GACFlT,KAAKkQ,SACLlQ,KAAKkQ,QAAQiD,UAAUD,uCAQ3B,OAAOlT,KAAKkQ,QAAUlQ,KAAKkQ,QAAQkD,YAAc,0CAOrCC,GACZ,GAAIrT,KAAKkQ,QACL,OAAOlQ,KAAKkQ,QAAQoD,gBAAgBD,6CAQxC,OAAOrT,KAAKkQ,QAAUlQ,KAAKkQ,QAAQqD,kBAAoB,sDAOvD,OAAOvT,KAAKkQ,QAAUlQ,KAAKkQ,QAAQsD,4BAA8B,oDAOjE,OAAOxT,KAAKkQ,QAAUlQ,KAAKkQ,QAAQuD,yBAA2B,2CAO9D,GAAKjI,IAAcC,OAAOoB,GAG1B,OAAO7M,KAAKkQ,QAAUlQ,KAAKkQ,QAAQgB,kBAAoB,2CAOvD,OAAOlR,KAAKkQ,QAAUlQ,KAAKkQ,QAAQwD,iBAAmB,+CAOtD,OAAO1T,KAAKkQ,QAAUlQ,KAAKkQ,QAAQyD,qBAAuB,8DAO1D,OAAO3T,KAAKkQ,QAAUlQ,KAAKkQ,QAAQ0D,4BAA8B,yCAOjE,OAAO5T,KAAKkQ,QAAUlQ,KAAKkQ,QAAQ2D,cAAgB,wCAOnD,OAAO7T,KAAKkQ,QAAUlQ,KAAKkQ,QAAQ4D,cAAgB,+CAOnD,OAAO9T,KAAKkQ,QAAUlQ,KAAKkQ,QAAQ6D,oBAAsB,mCA/V7C,OAAO/T,KAAKuN,uBAKhBe,GACRtO,KAAKuN,SAAWe,EAChBtO,KAAK2L,YAAYqG,KAAK1D,kCAMX,OAAOtO,KAAK4L,sBAKhB6C,GACPzO,KAAK4L,QAAU6C,GAAUlD,GACzBvL,KAAK6L,WAAWmG,KAAKhS,KAAK4L,uCAMhB,OAAO5L,KAAK8L,qBAKhB0C,GACNxO,KAAK8L,OAAS0C,GAASlD,GACvBtL,KAAK+L,UAAUiG,KAAKhS,KAAK8L,2CAOZgF,GACb9Q,KAAKgM,cAAcgG,KAAKlB,oCAObC,GACX/Q,KAAKiM,YAAY+F,KAAKjB,0CAOLP,GACjBxQ,KAAKkM,kBAAkB8F,KAAKxB,aAyStBhQ,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAKuI,IAAetI,EAAAoH,GAAyBpH,EAAAsT,KAClHhL,GAAc/E,UAAOvD,EAAAwD,GAAyB,CAAElI,KAAMgN,GAAe7E,UAAW,CAAC,CAAC,mBAAoB8P,UAAW,SAA6BzP,EAAIlD,GAG1I,IAAI4S,EAHsJ,EAAL1P,GACrJ9D,EAAAyT,GAAmB9I,IAAAA,GACZ,EAAL7G,GAEF9D,EAAA0T,GAAsBF,EAAKxT,EAAA2T,QAA0B/S,EAAIwM,iBAAmBoG,EAAGnE,QAC9EuE,OAAQ,CAAEhG,QAAS,UAAWG,OAAQ,SAAUD,MAAO,QAASsC,aAAc,eAAgBC,WAAY,aAAcP,iBAAkB,mBAAoB1D,yBAA0B,4BAA8ByH,QAAS,CAAEpI,MAAO,QAASC,YAAa,cAAehQ,MAAO,QAASiQ,UAAW,YAAaC,sBAAuB,wBAAyBC,mBAAoB,sBAAwBnI,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,mBAAoB,KAAMC,SAAU,SAAgCC,EAAIlD,GAAgB,EAALkD,GAClgB9D,EAAAoE,GAAiB,EAAG,MAAO,KAAM,IAChC0P,cAAe,EAAGC,gBAAiB,QA8L5C,SAASvF,GAAgBI,EAAzBoF,GAA6CC,IAAAA,EAAAA,eAAAA,EAAAA,GAAXC,EAAWD,EAAAA,GAAAA,EAAAA,EAAAA,GACzC,GAAKA,EAAL,CAMA,GAAIrF,EACA,OAAOA,EAGX,IAAMuF,EAAY,IAAIhI,GAAGiI,OAAOF,EAAWD,GAG3C,OADAE,EAAUvG,QAAUqG,EAAarG,QAC1BuG,EAZCvF,GACAA,EAAOiD,UA6FnB,SAAStB,GAAc8D,EAAUC,GAC7B,OAAOhY,OAAAqD,EAAAE,EAAAvD,CAAKyL,GAAesM,GAAW/X,OAAAqB,GAAAkC,EAAAvD,EAAO,SAAAiY,GAAA,IAAAC,EAAA7G,eAAA4G,EAAA,GAI3ClV,EAJ2CmV,EAAA,GAIpCC,EAJoCD,EAAA,GAAA,OAIzBF,EAASG,EAAOpV,MAAU/C,OAAAsD,EAAAC,EAAAvD,EAAI,SAAAoY,GAAA,OAAA/G,eAAA+G,EAAA,GAAA,WAahDC,QAAAA,0CAEcC,UAAO5U,EAAA6U,GAAwB,CAAEvZ,KAAMqZ,KAC3DA,GAAoBG,UAAO9U,EAAA+U,GAAwB,CAAE1U,QAAS,SAAqCN,GAAK,OAAO,IAAKA,GAAK4U,WIvtBzH,SAASK,GAAiClR,EAAIlD,GAE5C,GAF4D,EAALkD,GCJvD9D,EAAAoE,GAAA,EAAA,MAAA,GDMS,EAALN,EAAQ,CACV,IAAMmR,EAAUjV,EAAAwE,KCLhBxE,EAAA0E,GAAA,MAAAuQ,EAAAC,MAAAC,MAAAC,MAAApV,EAAAqV,GAAArV,CAAyB,MAAAiV,EAAAC,MAAAI,KAAAL,EAAAC,MAAAvQ,OAAAsQ,EAAAC,MAAA/S,MAAzB,GAAAnC,CAAyB,QAAAiV,EAAAC,MAAAC,MAAzB,eAAAnV,CAAyB,SAAAiV,EAAAC,MAAAC,MAAA,kBDQ7B,SAASI,GAAiCzR,EAAIlD,GAI5C,GAJ4D,EAALkD,ICFvD9D,EAAA+D,GAAA,EAAA,MAAA,GACE/D,EAAAoE,GAAA,EAAA,iBAAA,GACFpE,EAAAiE,MDIS,EAALH,EAAQ,CACV,IAAM0R,EAAUxV,EAAAwE,KCNAxE,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAA8Q,EAAA5H,UCDb,IAAM6H,GAANC,KAAMD,GAAN,WAOL,SAAAA,IAAA9S,gBAAArD,KAAAmW,GAPK,OAAAtW,aAAAsW,EAAA,CAAA,CAAArW,IAAA,WAAAC,MAAA,WAUH,GAAkB,UAAdC,KAAKhE,KAAkB,CACzBgE,KAAKsO,QvBhBiB,SAAC+H,GAA6B,IAIpDlY,EAJoCmY,EAAgB/Y,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,CAAEgZ,OAAAA,GACjD,IAAK,aAAaC,KAAKH,GAAM,OAAO,KAIpC,IAAMI,EAAW,CACf,0BACA,mBACA,kBACA,sBACA,qBAIF,IAAKtY,EAAI,EAAGA,EAAIsY,EAASjZ,SAAUW,EACjC,GAAIsY,EAAStY,GAAGqY,KAAKH,GAAM,OAAOI,EAAStY,GAAGuY,KAAKL,GAAK,GAG1D,GAAIC,EAAKC,MAAO,CAGd,IAAMI,EAASN,EAAIO,MAAM,eACzB,IAAKzY,EAAI,EAAGA,EAAIwY,EAAOnZ,SAAUW,EAC/B,GAAI,eAAeqY,KAAKG,EAAOxY,IAAK,OAAOwY,EAAOxY,IuBPnC0Y,CAAa7W,KAAK8W,OAKjC,IAAMC,EAAMC,SAASC,cAAc,UAEnCF,EAAIG,IAAM,qCACVF,SAASxX,KAAK2X,YAAYJ,QAnBzBZ,EAAA,IF0BW3V,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GE1BhE0V,KF2BbA,GAAkBlS,UAAOvD,EAAAwD,GAAqB,CAAElI,KE3BnCma,GAAiBhS,UAAA,CAAA,CAAA,iBAAAmQ,OAAA,CAAAtY,KAAA,OAAA4Z,MAAA,QAAAkB,MAAA,SAAA1S,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,MAAA,MAAA,QAAA,SAAA,EAAA,gBAAA,CAAA,QAAA,6BAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,MAAA,QAAA,UAAA,CAAA,EAAA,8BAAA,CAAA,EAAA,YAAAC,SAAA,SAAAC,EAAAlD,GAAA,EAAAkD,IDT9B9D,EAAA0F,GAAA,EAAA,GACE1F,EAAA2F,GAAA,EAAAqP,GAAA,EAAA,EAAA,MAAA,GAQAhV,EAAA2F,GAAA,EAAA4P,GAAA,EAAA,EAAA,MAAA,GAGFvV,EAAA6F,MD6Be,EAAL/B,ICzCI9D,EAAA0E,GAAA,WAAA9D,EAAAtF,MAEV0E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,eAAA,SAOG1E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,eAAA,WDsCE8C,WAAY,CAACC,EAAAxF,EAAawF,EAAAiP,EAAiBC,IAAmBzS,OAAQ,CAAC,uSG5ChF,SAAS0S,GAAmC9S,EAAIlD,GAAgB,EAALkD,GCMnD9D,EAAAoE,GAAA,EAAA,OAAA,GDJG,EAALN,GCIwC9D,EAAA0E,GAAA,YDH5B9D,EAAI0D,UCGwBnC,KAAA,OAAAnC,EAAA6E,IDA9C,SAASgS,GAAmC/S,EAAIlD,GAAgB,EAALkD,GCUnD9D,EAAAoE,GAAA,EAAA,OAAA,GDRG,EAALN,GCQ2C9D,EAAA0E,GAAA,YDP/B9D,EAAI0D,UCO2BnC,KAAA,OAAAnC,EAAA6E,IDJjD,SAASiS,GAAmChT,EAAIlD,GAAgB,EAALkD,GCUnD9D,EAAAoE,GAAA,EAAA,OAAA,GDRG,EAALN,GCQ0C9D,EAAA0E,GAAA,YDP9B9D,EAAI0D,UCO0BnC,KAAA,OAAAnC,EAAA6E,ICjBzC,IAAMkS,GAANC,KAAMD,GAAN,WAAA,SAAAA,IAAApU,gBAAArD,KAAAyX,GAAA,OAAA5X,aAAA4X,EAAA,CAAA,CAAA3X,IAAA,WAAAC,MAAA,gBAAA0X,EAAA,IFgBWjX,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GEhBhEgX,KFiBbA,GAAkBxT,UAAOvD,EAAAwD,GAAqB,CAAElI,KEjBnCyb,GAAiBtT,UAAA,CAAA,CAAA,iBAAAmQ,OAAA,CAAAqD,KAAA,QAAAvT,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,EAAA,aAAA,CAAA,EAAA,YAAA,EAAA,QAAA,YAAAC,SAAA,SAAAC,EAAAlD,GAAA,EAAAkD,IDR9B9D,EAAA+D,GAAA,EAAA,SACE/D,EAAA+D,GAAA,EAAA,SACE/D,EAAA+D,GAAA,EAAA,MACE/D,EAAA+D,GAAA,EAAA,KAAA,GAAgB/D,EAAAgE,GAAA,EAAA,cAAUhE,EAAAiE,KAC1BjE,EAAAoE,GAAA,EAAA,KAAA,GACFpE,EAAAiE,KACAjE,EAAA+D,GAAA,EAAA,MACE/D,EAAA+D,GAAA,EAAA,KAAA,GAAgB/D,EAAAgE,GAAA,EAAA,aAAShE,EAAAiE,KACzBjE,EAAA+D,GAAA,EAAA,MACE/D,EAAA2F,GAAA,GAAAiR,GAAA,EAAA,EAAA,OAAA,GACF5W,EAAAiE,KACFjE,EAAAiE,KACAjE,EAAA+D,GAAA,GAAA,MACE/D,EAAA+D,GAAA,GAAA,KAAA,GAAgB/D,EAAAgE,GAAA,GAAA,mBAAehE,EAAAiE,KAC/BjE,EAAAoE,GAAA,GAAA,KAAA,GACFpE,EAAAiE,KACAjE,EAAA+D,GAAA,GAAA,MACE/D,EAAA+D,GAAA,GAAA,KAAA,GAAgB/D,EAAAgE,GAAA,IAAiEhE,EAAAiE,KACjFjE,EAAA+D,GAAA,GAAA,MACE/D,EAAA2F,GAAA,GAAAkR,GAAA,EAAA,EAAA,OAAA,GACF7W,EAAAiE,KACFjE,EAAAiE,KACAjE,EAAA+D,GAAA,GAAA,MACE/D,EAAA+D,GAAA,GAAA,KAAA,GAAgB/D,EAAAgE,GAAA,IAA8DhE,EAAAiE,KAC9EjE,EAAA+D,GAAA,GAAA,MACE/D,EAAA2F,GAAA,GAAAmR,GAAA,EAAA,EAAA,OAAA,GACF9W,EAAAiE,KACFjE,EAAAiE,KACFjE,EAAAiE,KACFjE,EAAAiE,MDqCe,EAALH,IC9DA9D,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAA9D,EAAAqW,KAAAC,MAAA/U,KAAAnC,EAAA6E,IAKI7E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAA9D,EAAAqW,KAAAE,UAKJnX,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAA9D,EAAAqW,KAAAG,gBAAApX,EAAA6E,IAGY7E,EAAAyE,GAAA,GAAAzE,EAAAqX,GAAA,GAAAzW,EAAAqW,KAAAK,YAAAxa,OAAA,EAAA,cAAA,aAAA,KAERkD,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAA9D,EAAAqW,KAAAK,aAIQtX,EAAAyE,GAAA,GAAAzE,EAAAqX,GAAA,GAAAzW,EAAAqW,KAAAM,WAAAza,OAAA,EAAA,aAAA,YAAA,KAERkD,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAA9D,EAAAqW,KAAAM,cDwDL/P,WAAY,CAACC,EAAAhK,GAAayG,OAAQ,CAAC,+DGpE5C,SAASsT,GAAoE1T,EAAIlD,GAI/E,GAJ+F,EAALkD,ICPlF9D,EAAA+D,GAAA,EAAA,QAA+C/D,EAAAgE,GAAA,GAAchE,EAAAiE,MDW5D,EAALH,EAAQ,CACV,IAAM2T,EAAU7W,EAAI0D,UCZiCtE,EAAAyE,GAAA,GAAAzE,EAAA0X,GAAAD,EAAAtV,ODgBzD,SAASwV,GAA6D7T,EAAIlD,GAKxE,GALwF,EAALkD,ICjB/E9D,EAAA+D,GAAA,EAAA,OAAA,IACE/D,EAAAgE,GAAA,EAAA,YAAEhE,EAAA2F,GAAA,EAAA6R,GAAA,EAAA,EAAA,OAAA,IACJxX,EAAAiE,MDoBK,EAALH,EAAQ,CACV,IAAM8T,EAAW5X,EAAAwE,KAAmBqT,KCtBxB7X,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAAkT,EAAA7S,IAAA+S,cD0BhB,SAASC,GAA4DjU,EAAIlD,GAAgB,EAALkD,ICZhF9D,EAAA+D,GAAA,EAAA,MAAoC/D,EAAAgE,GAAA,EAAA,WAAOhE,EAAAiE,MDiB/C,SAAS+T,GAA6DlU,EAAIlD,GAExE,GAFwF,EAALkD,GChBjF9D,EAAAoE,GAAA,EAAA,MAAA,IDkBO,EAALN,EAAQ,CACV,IAAMmU,EAAYrX,EAAI0D,UCjBpBtE,EAAA0E,GAAA,MAAAuT,EAAA9C,MAAA+C,OAAAlY,EAAAqV,GAAArV,CAA0B,MAAAiY,EAAA3C,KAAA2C,EAAAtT,OAAAsT,EAAA9V,MAA1B,GAAAnC,CAA0B,QAAAiY,EAAA9C,MAA1B,gBAAAnV,CAA0B,SAAAiY,EAAA9C,MAAA,mBDoBhC,SAASgD,GAAsDrU,EAAIlD,GAAO,GAAS,EAALkD,EAAQ,CAClF,IAAMsU,EAAOpY,EAAAoF,KC3CfpF,EAAA+D,GAAA,EAAA,WACE/D,EAAAoE,GAAA,EAAA,KAAA,GACApE,EAAA+D,GAAA,EAAA,IAAA,GACE/D,EAAAgE,GAAA,GACAhE,EAAA2F,GAAA,EAAAgS,GAAA,EAAA,EAAA,OAAA,GAGF3X,EAAAiE,KAEAjE,EAAAoE,GAAA,EAAA,eAAA,GAKApE,EAAAoE,GAAA,EAAA,IAAA,GAEApE,EAAA+D,GAAA,EAAA,MAAI/D,EAAAgE,GAAA,EAAA,cAAUhE,EAAAiE,KACdjE,EAAAoE,GAAA,EAAA,eAAA,GAEApE,EAAA2F,GAAA,GAAAoS,GAAA,EAAA,EAAA,KAAA,GACA/X,EAAA2F,GAAA,GAAAqS,GAAA,EAAA,EAAA,MAAA,GAQAhY,EAAA+D,GAAA,GAAA,SAAA,IACE/D,EAAA+D,GAAA,GAAA,SAAA,IAAsB/D,EAAAqF,GAAA,SAAA,SAAAC,GAAA,OAAAtF,EAAAuF,GAAA6S,GAAApY,EAAAwE,GAAA,GAAA6T,WAAkBrY,EAAAgE,GAAA,GAAA,aAAShE,EAAAiE,KACnDjE,EAAAiE,KACFjE,EAAAiE,KDkCA,GAAS,EAALH,EAAQ,CACV,IAAM8T,EAAWhX,EAAIiX,KCjEjB7X,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAAkT,EAAAjT,MAAAC,SAAA5E,EAAA6E,IAEF7E,EAAAyE,GAAA,GAAAzE,EAAAqX,GAAA,IAAAO,EAAA7S,IAAAnJ,KAAA0c,WAAA,KACMtY,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAAkT,EAAA7S,IAAA+S,YAAAhb,QAMNkD,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAAkT,EAAA7S,IAAAwT,eAAAvY,CAAgC,QAAA4X,EAAA7S,IAAhCyT,SAAAxY,CAAgC,QAAA4X,EAAA7S,IAAA0T,SAI/BzY,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,YAAAkT,EAAA7S,IAAAC,aAAAhF,EAAA6E,IAGW7E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAAkT,EAAA7S,KAEV/E,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAAkT,EAAA7S,IAAA2T,QAAA5b,QAEFkD,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,UAAAkT,EAAA7S,IAAA2T,UD+DN,SAASC,GAA4C7U,EAAIlD,GAKvD,GALuE,EAALkD,ICrFpE9D,EAAA0F,GAAA,GACE1F,EAAA2F,GAAA,EAAAwS,GAAA,GAAA,GAAA,UAAA,GDuFEnY,EAAA4F,GAAU,EAAG,SCvDjB5F,EAAA6F,MDyDW,EAAL/B,EAAQ,CACV,IAAM8U,EAAU5Y,EAAAwE,KACVqU,EAAO7Y,EAAAuH,GAAe,GC3FrBvH,EAAAyE,GAAA,GAAAzE,EAAA0E,GAAA,OAAA1E,EAAA+F,GAAA,EAAA,EAAA6S,EAAAE,OAAA9Y,CAA4C,WAAA6Y,ID+FvD,SAASE,GAA2CjV,EAAIlD,GAOtD,GAPsE,EAALkD,IC5DjE9D,EAAA+D,GAAA,EAAA,IAAA,IACE/D,EAAAgE,GAAA,GACAhE,EAAA+D,GAAA,EAAA,OAAA,IAAkE/D,EAAAgE,GAAA,EAAA,gBAAEhE,EAAAiE,KACtEjE,EAAAiE,MDgES,EAALH,EAAQ,CACV,IAAMkV,EAAUhZ,EAAAwE,KCnEhBxE,EAAAyE,GAAA,GAAAzE,EAAAqX,GAAA,uBAAA2B,EAAAC,MAAA,0BDuEJ,SAASC,GAA2CpV,EAAIlD,GAAgB,EAALkD,ICjEjE9D,EAAA+D,GAAA,EAAA,IAAA,IAAmC/D,EAAAgE,GAAA,EAAA,oBAAgBhE,EAAAoE,GAAA,EAAA,uBAA2CpE,EAAAiE,MCvChG,ICYakV,GCHAC,GCFAC,GCFAC,GJAAC,GAAkB5R,EAAA+O,EAAa8C,SALrB,CACrB,CAAEC,KAAM,GAAIC,UAAWjT,GACvB,CAAEgT,KAAM,MAAOC,WCUJP,GAAN,WASL,SAAAA,EAAYQ,EAA+BhZ,GAAAA,IAAAA,EAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,KAAAA,MAAAA,EACzCrB,KAAK2Z,MAAQU,EAAMC,SAASC,SAASnb,IAAI,MACzCY,KAAKjE,GAAKoD,OAAOa,KAAK2Z,OAEtB3Z,KAAKwa,YAAcxa,KAAKya,kBAAkBpa,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAI0d,SAAAA,GAAAA,OAAkBA,EAAe1a,EAAKjE,QACzFiE,KAAKwZ,MAAQxZ,KAAKwa,YAAYna,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAId,SAAAA,GAAAA,OAAQA,EAAKoB,WACpD0C,KAAK4G,YAAc5G,KAAKwa,YAAYna,KAAKrD,OAAAsD,EAAAC,EAAAvD,EAAId,SAAAA,GAAAA,OAAQA,EAAK2B,eAfvD,OAAAgC,aAAAga,EAAA,CAAA,CAAA/Z,IAAA,WAAAC,MAAA,WAmBHC,KAAKqB,MAAME,SAAS,IAAIzF,EAAQkE,KAAKjE,KAAKoN,cAnBvC,CAAArJ,IAAA,QAAAC,MAAA,WAuBHiX,SAASxX,KAAKmb,eAAe,CAAEC,MAAO,QAASC,SAAU,eAvBtDhB,EAAA,GHkHPA,GAAoBrZ,UAAO,SAAqCC,GAAK,OAAO,IAAKA,GGlHpEoZ,IAAmBnZ,EAAAoH,GAAAO,EAAA9H,GAAAG,EAAAoH,GAAApF,EAAAC,KHmHhCkX,GAAoB5V,UAAOvD,EAAAwD,GAAqB,CAAElI,KGnHrC6d,GAAmB1V,UAAA,CAAA,CAAA,oBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,OAAA,YAAA,CAAA,WAAA,IAAA,CAAA,iBAAA,IAAA,CAAA,EAAA,aAAA,CAAA,EAAA,yBAAA,CAAA,QAAA,8BAAA,EAAA,QAAA,CAAA,EAAA,OAAA,QAAA,SAAA,CAAA,EAAA,QAAA,CAAA,EAAA,QAAA,CAAA,EAAA,MAAA,MAAA,QAAA,SAAA,EAAA,QAAA,WAAA,CAAA,EAAA,uBAAA,CAAA,OAAA,SAAA,EAAA,SAAA,CAAA,EAAA,+BAAA,CAAA,EAAA,QAAA,WAAA,CAAA,EAAA,MAAA,MAAA,QAAA,UAAA,CAAA,EAAA,2BAAA,CAAA,OAAA,MAAA,aAAA,UAAA,EAAA,aAAA,WAAAC,SAAA,SAAAC,EAAAlD,GHwH1B,GGxH0B,EAAAkD,IFhBhC9D,EAAA2F,GAAA,EAAAgT,GAAA,EAAA,EAAA,eAAA,GDqIQ3Y,EAAA4F,GAAU,EAAG,SClGrB5F,EAAA2F,GAAA,EAAAoT,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA/Y,EAAAqH,IAOArH,EAAA2F,GAAA,EAAAuT,GAAA,EAAA,EAAA,cAAA,KAAA,EAAAlZ,EAAAqH,KD8Fe,EAALvD,EAAQ,CACV,IAAMsW,EAAOpa,EAAAuH,GAAe,GCzItBvH,EAAA0E,GAAA,QAAA,IAAA1E,EAAA+F,GAAA,EAAA,EAAAnF,EAAAsF,aAAAlG,CAA4D,WAAAoa,KD2IjE5S,WAAY,CAACC,EAAAC,EAASgO,GAAsBsB,GAAsBvP,EAAAhK,EAAY6F,GAA6BsE,MAAO,CAACH,EAAAtG,GAAe+C,OAAQ,CAAC,4dG1HrG5H,OAAAC,EAAA4E,EAAA7E,CAAA,CAA5CA,OAAA0F,EAAA6F,EAAAvL,CAAOoG,EAAmB2X,mBH6H1BlB,GAAoBjX,UAAW,yBAAA,UMrI3BoY,KAAMhB,GAAN,SAAAA,IAAA3W,gBAAArD,KAAAga,KCHc1E,UAAO5U,EAAA6U,GAAoB,CAAEvZ,KDGrCge,KCFbA,GAAqBxE,UAAO9U,EAAA+U,GAAoB,CAAE1U,QAAS,SAAsCN,GAAK,OAAO,IAAKA,GDErGuZ,KAAoBiB,QAAA,CAJtB,CAAC9S,EAAA+S,UDMLC,KAAMpB,GAAN,SAAAA,IAAA1W,gBAAArD,KAAA+Z,KGHUzE,UAAO5U,EAAA6U,GAAoB,CAAEvZ,KHGjC+d,KGFbA,GAAiBvE,UAAO9U,EAAA+U,GAAoB,CAAE1U,QAAS,SAAkCN,GAAK,OAAO,IAAKA,GHE7FsZ,KAAgBqB,UAHhB,GAAEH,QAAA,CADJ,CAAC9S,EAAA+S,EAAc7S,EAAA+O,EAAc4D,WDMjCK,KAAMvB,GAAN,SAAAA,IAAAzW,gBAAArD,KAAA8Z,KKHUxE,UAAO5U,EAAA6U,GAAoB,CAAEvZ,KLGjC8d,KKFbA,GAAiBtE,UAAO9U,EAAA+U,GAAoB,CAAE1U,QAAS,SAAkCN,GAAK,OAAO,IAAKA,GLE7FqZ,KAAgBmB,QAAA,CAHlB,CAAC9S,EAAA+S,EAAcI,GAAqBN,WMV/CO,EAAAre,EAAAse,EAAA,mBAAA,WAAA,OAAAC,MAmBO,IAAMC,GAAND,KAAMC,GAAN,SAAAA,IAAArY,gBAAArD,KAAA0b,KCPSpG,UAAO5U,EAAA6U,GAAoB,CAAEvZ,KDOhC0f,KCNbA,GAAgBlG,UAAO9U,EAAA+U,GAAoB,CAAE1U,QAAS,SAAiCN,GAAK,OAAO,IAAKA,GDM3Fib,KAAeT,QAAA,CATjB,CACP9S,EAAA+S,EACAjB,GACAkB,GACAE,GACA3Y,EAAAiZ,EAAWC,WAAW,CAAClY","file":"portfolio-portfolio-module-es5.7405b8fa3536df82f541.js","sourcesContent":["import { Page } from '../../shared/models'\r\nimport { Post } from '../models/post.model'\r\nimport { PostRequestOptions } from '../posts.service'\r\n\r\nexport class GetPost {\r\n  static readonly type = '[Portfolio] Get Post'\r\n  constructor(public id: number) {}\r\n}\r\nexport class GetPostSuccess {\r\n  static readonly type = '[Portfolio API] Get Post Success'\r\n  constructor(public post: Post) {}\r\n}\r\nexport class GetPostError {\r\n  static readonly type = '[Portfolio API] Get Post Error'\r\n  constructor(public id: number, public error: Error) {}\r\n}\r\n\r\nexport class GetPostPage {\r\n  static readonly type = '[Portfolio] Get Post Page'\r\n  constructor(public page: PostRequestOptions) {}\r\n}\r\nexport class GetPostPageSuccess {\r\n  static readonly type = '[Portfolio API] Get Post Page Success'\r\n  constructor(public page: PostRequestOptions, public payload: Page<Post>) {}\r\n}\r\nexport class GetPostPageError {\r\n  static readonly type = '[Portfolio API] Get Post Page Error'\r\n  constructor(public page: PostRequestOptions, public error: Error) {}\r\n}\r\n","export const isArray = (item: any): item is any[] => Array.isArray(item)\r\n\r\nexport const serializePageQuery = ({ page, ...params }: any) => `?${new URLSearchParams(params)}`\r\n\r\nexport const getYoutubeId = (url: string, opts = { fuzzy: true }) => {\r\n  if (!/youtu\\.?be/.test(url)) return null\r\n\r\n  // Look first for known patterns\r\n  let i: number\r\n  const patterns = [\r\n    /youtu\\.be\\/([^#&?]{11})/, // youtu.be/<id>\r\n    /\\?v=([^#&?]{11})/, // ?v=<id>\r\n    /&v=([^#&?]{11})/, // &v=<id>\r\n    /embed\\/([^#&?]{11})/, // embed/<id>\r\n    /\\/v\\/([^#&?]{11})/, // /v/<id>\r\n  ]\r\n\r\n  // If any pattern matches, return the ID\r\n  for (i = 0; i < patterns.length; ++i) {\r\n    if (patterns[i].test(url)) return patterns[i].exec(url)[1]\r\n  }\r\n\r\n  if (opts.fuzzy) {\r\n    // If that fails, break it apart by certain characters and look\r\n    // for the 11 character key\r\n    const tokens = url.split(/[/&?=#.\\s]/g)\r\n    for (i = 0; i < tokens.length; ++i) {\r\n      if (/^[^#&?]{11}$/.test(tokens[i])) return tokens[i]\r\n    }\r\n  }\r\n}\r\n","import { __rest } from \"tslib\";\nexport const isArray = (item) => Array.isArray(item);\nexport const serializePageQuery = (_a) => {\n    var { page } = _a, params = __rest(_a, [\"page\"]);\n    return `?${new URLSearchParams(params)}`;\n};\nexport const getYoutubeId = (url, opts = { fuzzy: true }) => {\n    if (!/youtu\\.?be/.test(url))\n        return null;\n    // Look first for known patterns\n    let i;\n    const patterns = [\n        /youtu\\.be\\/([^#&?]{11})/,\n        /\\?v=([^#&?]{11})/,\n        /&v=([^#&?]{11})/,\n        /embed\\/([^#&?]{11})/,\n        /\\/v\\/([^#&?]{11})/,\n    ];\n    // If any pattern matches, return the ID\n    for (i = 0; i < patterns.length; ++i) {\n        if (patterns[i].test(url))\n            return patterns[i].exec(url)[1];\n    }\n    if (opts.fuzzy) {\n        // If that fails, break it apart by certain characters and look\n        // for the 11 character key\n        const tokens = url.split(/[/&?=#.\\s]/g);\n        for (i = 0; i < tokens.length; ++i) {\n            if (/^[^#&?]{11}$/.test(tokens[i]))\n                return tokens[i];\n        }\n    }\n};\n","import { StateOperator } from '@ngxs/store'\r\nimport { patch, append } from '@ngxs/store/operators'\r\nimport { Entity, PaginatedEntities, EntityPartial } from '../models'\r\nimport { isArray } from '.'\r\n\r\nexport const createEntity = <T>(id: Entity<T>['id'], entity: T = null): Entity<T> => ({\r\n  id,\r\n  entity,\r\n  lastUpdatedAt: new Date().toISOString(),\r\n  isFetching: false,\r\n  isRefreshing: false,\r\n  isError: false,\r\n})\r\n\r\nexport function uniq(item: any | any[]): StateOperator<any[]> {\r\n  return (state: any[]) => {\r\n    const noUniq = isArray(item) ? item.some(i => !state.includes(i)) : state.includes(item)\r\n    if (noUniq) return state\r\n\r\n    return state.concat(isArray(item) ? item.filter(i => !state.includes(i)) : item)\r\n  }\r\n}\r\n\r\nexport function addEntity<T>(entity: Entity<T>): StateOperator<PaginatedEntities<T>> {\r\n  const id = entity.id.toString()\r\n  return patch<PaginatedEntities<T>>({ ids: uniq(id), entities: patch({ [id]: entity }) })\r\n}\r\n\r\nexport function addEntities<T>(payload: Entity<T>[]): StateOperator<PaginatedEntities<T>> {\r\n  const entities = payload.reduce((obj, entity) => ((obj[entity.id] = entity), obj), {})\r\n  return patch<PaginatedEntities<T>>({\r\n    ids: uniq(payload.map(p => p.id.toString())),\r\n    entities: patch(entities),\r\n  })\r\n}\r\n\r\nexport function updateEntity<T>(payload: EntityPartial<T>): StateOperator<PaginatedEntities<T>> {\r\n  return (state: PaginatedEntities<T>) => {\r\n    const prevEntity = state.entities[payload.id]\r\n    return {\r\n      ...state,\r\n      entities: { ...state.entities, [payload.id]: { ...prevEntity, ...payload } },\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { environment } from 'src/environments/environment'\r\n\r\nimport { Page } from '../shared/models'\r\nimport { Post } from './models/post.model'\r\n\r\nexport interface PostRequestOptions {\r\n  page: number\r\n  perPage?: number\r\n}\r\n\r\nconst { apiUrl } = environment\r\n\r\nconst headersGetTotal = (headers: HttpHeaders) => Number(headers.get('x-wp-total'))\r\nconst headersGetTotalPages = (headers: HttpHeaders) => Number(headers.get('x-wp-totalpages'))\r\n\r\nconst getPostPageFromResponse = (response: HttpResponse<Post[]>): Page<Post> => {\r\n  const { body, headers } = response\r\n  return { body, total: headersGetTotal(headers), totalPages: headersGetTotalPages(headers) }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PostsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPost(id: number) {\r\n    return this.http.get<Post>(`${apiUrl}posts/${id}`)\r\n  }\r\n\r\n  getPosts({ page, perPage = 10 }: PostRequestOptions) {\r\n    return this.http\r\n      .get<Post[]>(`${apiUrl}posts?per_page=${perPage}&page=${page}`, { observe: 'response' })\r\n      .pipe(map(getPostPageFromResponse))\r\n  }\r\n}\r\n","import { State, Action, StateContext, NgxsOnInit, Store } from '@ngxs/store'\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { PostsService } from '../posts.service'\r\nimport { patch } from '@ngxs/store/operators'\r\nimport { addEntity, addEntities, updateEntity, createEntity } from '../../shared/util/store'\r\nimport { serializePageQuery } from '../../shared/util'\r\nimport { PaginatedEntities } from '../../shared/models'\r\nimport { Post } from '../models/post.model'\r\nimport {\r\n  GetPost,\r\n  GetPostSuccess,\r\n  GetPostError,\r\n  GetPostPage,\r\n  GetPostPageSuccess,\r\n  GetPostPageError,\r\n} from './portfolio.actions'\r\nimport { Injectable } from '@angular/core'\r\n\r\nexport type PortfolioStateModel = PaginatedEntities<Post>\r\nexport type PortfolioStateContext = StateContext<PortfolioStateModel>\r\n\r\nconst initialState: PortfolioStateModel = { entities: {}, ids: [], pagination: {} }\r\n\r\n@State<PortfolioStateModel>({ name: 'portfolio', defaults: initialState })\r\n@Injectable()\r\nexport class PortfolioState implements NgxsOnInit {\r\n  constructor(private postsService: PostsService, private store: Store) {}\r\n\r\n  ngxsOnInit(ctx: PortfolioStateContext) {\r\n    ctx.dispatch(new GetPostPage({ page: 1, perPage: 8 }))\r\n  }\r\n\r\n  @Action(GetPost)\r\n  getPost(ctx: PortfolioStateContext, { id }: GetPost) {\r\n    const existing = ctx.getState().entities[id]\r\n    if (existing && !existing.isError) return ctx.dispatch(new GetPostSuccess(existing.entity))\r\n\r\n    ctx.setState(\r\n      addEntity<Post>({ ...createEntity<Post>(id), isFetching: true }),\r\n    )\r\n\r\n    return this.postsService.getPost(id).pipe(\r\n      map(response => ctx.dispatch(new GetPostSuccess(response))),\r\n      catchError(error => ctx.dispatch(new GetPostError(id, error))),\r\n    )\r\n  }\r\n\r\n  @Action(GetPostSuccess)\r\n  getPostSuccess(ctx: PortfolioStateContext, { post }: GetPostSuccess) {\r\n    ctx.setState(updateEntity<Post>(createEntity<Post>(post.id, post)))\r\n  }\r\n\r\n  @Action(GetPostError)\r\n  getPostError(ctx: PortfolioStateContext, { id, error }: GetPostError) {\r\n    ctx.setState(updateEntity({ id, isError: true, isFetching: false, isRefreshing: false }))\r\n    console.error(error)\r\n  }\r\n\r\n  @Action(GetPostPage)\r\n  getPostPage(ctx: PortfolioStateContext, { page }: GetPostPage) {\r\n    const state = ctx.getState()\r\n    const query = serializePageQuery(page)\r\n\r\n    const existingQuery = ctx.getState().pagination[query]\r\n    if (existingQuery && existingQuery.pages[page.page]) return\r\n    if (!existingQuery) {\r\n      ctx.patchState({\r\n        pagination: { ...state.pagination, [query]: { total: 0, totalPages: 0, pages: {} } },\r\n      })\r\n    }\r\n\r\n    ctx.setState(\r\n      patch({\r\n        pagination: patch({\r\n          [query]: patch({\r\n            pages: patch({ [page.page]: { ...createEntity(page.page), isFetching: true } }),\r\n          }),\r\n        }),\r\n      }),\r\n    )\r\n\r\n    return this.postsService.getPosts(page).pipe(\r\n      map(response => ctx.dispatch(new GetPostPageSuccess(page, response))),\r\n      catchError(error => ctx.dispatch(new GetPostPageError(page, error))),\r\n    )\r\n  }\r\n\r\n  @Action(GetPostPageSuccess)\r\n  getPostPageSuccess(ctx: PortfolioStateContext, { page, payload }: GetPostPageSuccess) {\r\n    const query = serializePageQuery(page)\r\n\r\n    const entities = payload.body.map(item => createEntity(item.id, item))\r\n    const pageIds = payload.body.map(item => item.id.toString())\r\n    ctx.setState(addEntities(entities))\r\n\r\n    ctx.setState(\r\n      patch({\r\n        pagination: patch({\r\n          [query]: patch({\r\n            total: payload.total,\r\n            totalPages: payload.totalPages,\r\n            pages: patch({ [page.page]: { ...createEntity(page.page, pageIds) } }),\r\n          }),\r\n        }),\r\n      }),\r\n    )\r\n  }\r\n\r\n  @Action(GetPostPageError)\r\n  getPostPageError(ctx: PortfolioStateContext, { page, error }: GetPostPageError) {\r\n    const query = serializePageQuery(page)\r\n    ctx.setState(\r\n      patch({\r\n        pagination: patch({\r\n          [query]: patch({\r\n            pages: patch({\r\n              [page.page]: patch({ isError: true, isRefreshing: false, isFetching: false }),\r\n            }),\r\n          }),\r\n        }),\r\n      }),\r\n    )\r\n    console.error(error)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css'],\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Selector } from '@ngxs/store'\r\nimport { PortfolioState, PortfolioStateModel } from './portfolio.state'\r\nimport { Post } from '../models/post.model'\r\nimport { SharedSelectors } from 'src/app/shared/store/selectors'\r\nimport { PostRequestOptions } from '../posts.service'\r\nimport { serializePageQuery } from 'src/app/shared/util'\r\n\r\nexport class PortfolioSelectors {\r\n  static entities = SharedSelectors.getEntities<Post>(PortfolioState)\r\n  static ids = SharedSelectors.getEntityIds(PortfolioState)\r\n  static posts = SharedSelectors.getEntityList<Post>(PortfolioState)\r\n\r\n  @Selector([PortfolioState])\r\n  static pagination(state: PortfolioStateModel) {\r\n    return state.pagination\r\n  }\r\n  @Selector([PortfolioSelectors.entities])\r\n  static postEntityByIdFn(entities: ReturnType<typeof PortfolioSelectors.entities>) {\r\n    return (id: number) => entities[id]\r\n  }\r\n  @Selector([PortfolioSelectors.pagination])\r\n  static postQueryFn(pagination: ReturnType<typeof PortfolioSelectors.pagination>) {\r\n    return (options: PostRequestOptions) => pagination[serializePageQuery(options)]\r\n  }\r\n  @Selector([PortfolioSelectors.postQueryFn])\r\n  static postQueryPageFn(getPageQuery: ReturnType<typeof PortfolioSelectors.postQueryFn>) {\r\n    return (options: PostRequestOptions) => getPageQuery(options).pages[options.page]\r\n  }\r\n  @Selector([PortfolioSelectors.entities, PortfolioSelectors.postQueryFn])\r\n  static postEntitiesByQueryFn(\r\n    entities: ReturnType<typeof PortfolioSelectors.entities>,\r\n    getPageQuery: ReturnType<typeof PortfolioSelectors.postQueryFn>,\r\n  ) {\r\n    return (options: PostRequestOptions) => {\r\n      const pages = Object.values(getPageQuery(options).pages).filter(p => !p.isFetching)\r\n      const ids = pages.map(p => p.entity).flat()\r\n      return ids.map(id => entities[id])\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst { apiUrl } = environment;\nconst headersGetTotal = (headers) => Number(headers.get('x-wp-total'));\nconst headersGetTotalPages = (headers) => Number(headers.get('x-wp-totalpages'));\nconst getPostPageFromResponse = (response) => {\n    const { body, headers } = response;\n    return { body, total: headersGetTotal(headers), totalPages: headersGetTotalPages(headers) };\n};\nexport class PostsService {\n    constructor(http) {\n        this.http = http;\n    }\n    getPost(id) {\n        return this.http.get(`${apiUrl}posts/${id}`);\n    }\n    getPosts({ page, perPage = 10 }) {\n        return this.http\n            .get(`${apiUrl}posts?per_page=${perPage}&page=${page}`, { observe: 'response' })\n            .pipe(map(getPostPageFromResponse));\n    }\n}\nPostsService.ɵfac = function PostsService_Factory(t) { return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient)); };\nPostsService.ɵprov = i0.ɵɵdefineInjectable({ token: PostsService, factory: PostsService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PostsService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: i1.HttpClient }]; }, null); })();\n","import { __decorate } from \"tslib\";\nimport { State, Action } from '@ngxs/store';\nimport { map, catchError } from 'rxjs/operators';\nimport { patch } from '@ngxs/store/operators';\nimport { addEntity, addEntities, updateEntity, createEntity } from '../../shared/util/store';\nimport { serializePageQuery } from '../../shared/util';\nimport { GetPost, GetPostSuccess, GetPostError, GetPostPage, GetPostPageSuccess, GetPostPageError, } from './portfolio.actions';\nimport { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@ngxs/store\";\nconst initialState = { entities: {}, ids: [], pagination: {} };\nlet PortfolioState = class PortfolioState {\n    constructor(postsService, store) {\n        this.postsService = postsService;\n        this.store = store;\n    }\n    ngxsOnInit(ctx) {\n        ctx.dispatch(new GetPostPage({ page: 1, perPage: 8 }));\n    }\n    getPost(ctx, { id }) {\n        const existing = ctx.getState().entities[id];\n        if (existing && !existing.isError)\n            return ctx.dispatch(new GetPostSuccess(existing.entity));\n        ctx.setState(addEntity(Object.assign(Object.assign({}, createEntity(id)), { isFetching: true })));\n        return this.postsService.getPost(id).pipe(map(response => ctx.dispatch(new GetPostSuccess(response))), catchError(error => ctx.dispatch(new GetPostError(id, error))));\n    }\n    getPostSuccess(ctx, { post }) {\n        ctx.setState(updateEntity(createEntity(post.id, post)));\n    }\n    getPostError(ctx, { id, error }) {\n        ctx.setState(updateEntity({ id, isError: true, isFetching: false, isRefreshing: false }));\n        console.error(error);\n    }\n    getPostPage(ctx, { page }) {\n        const state = ctx.getState();\n        const query = serializePageQuery(page);\n        const existingQuery = ctx.getState().pagination[query];\n        if (existingQuery && existingQuery.pages[page.page])\n            return;\n        if (!existingQuery) {\n            ctx.patchState({\n                pagination: Object.assign(Object.assign({}, state.pagination), { [query]: { total: 0, totalPages: 0, pages: {} } }),\n            });\n        }\n        ctx.setState(patch({\n            pagination: patch({\n                [query]: patch({\n                    pages: patch({ [page.page]: Object.assign(Object.assign({}, createEntity(page.page)), { isFetching: true }) }),\n                }),\n            }),\n        }));\n        return this.postsService.getPosts(page).pipe(map(response => ctx.dispatch(new GetPostPageSuccess(page, response))), catchError(error => ctx.dispatch(new GetPostPageError(page, error))));\n    }\n    getPostPageSuccess(ctx, { page, payload }) {\n        const query = serializePageQuery(page);\n        const entities = payload.body.map(item => createEntity(item.id, item));\n        const pageIds = payload.body.map(item => item.id.toString());\n        ctx.setState(addEntities(entities));\n        ctx.setState(patch({\n            pagination: patch({\n                [query]: patch({\n                    total: payload.total,\n                    totalPages: payload.totalPages,\n                    pages: patch({ [page.page]: Object.assign({}, createEntity(page.page, pageIds)) }),\n                }),\n            }),\n        }));\n    }\n    getPostPageError(ctx, { page, error }) {\n        const query = serializePageQuery(page);\n        ctx.setState(patch({\n            pagination: patch({\n                [query]: patch({\n                    pages: patch({\n                        [page.page]: patch({ isError: true, isRefreshing: false, isFetching: false }),\n                    }),\n                }),\n            }),\n        }));\n        console.error(error);\n    }\n};\nPortfolioState.ɵfac = function PortfolioState_Factory(t) { return new (t || PortfolioState)(i0.ɵɵinject(i1.PostsService), i0.ɵɵinject(i2.Store)); };\nPortfolioState.ɵprov = i0.ɵɵdefineInjectable({ token: PortfolioState, factory: PortfolioState.ɵfac });\n__decorate([\n    Action(GetPost)\n], PortfolioState.prototype, \"getPost\", null);\n__decorate([\n    Action(GetPostSuccess)\n], PortfolioState.prototype, \"getPostSuccess\", null);\n__decorate([\n    Action(GetPostError)\n], PortfolioState.prototype, \"getPostError\", null);\n__decorate([\n    Action(GetPostPage)\n], PortfolioState.prototype, \"getPostPage\", null);\n__decorate([\n    Action(GetPostPageSuccess)\n], PortfolioState.prototype, \"getPostPageSuccess\", null);\n__decorate([\n    Action(GetPostPageError)\n], PortfolioState.prototype, \"getPostPageError\", null);\nPortfolioState = __decorate([\n    State({ name: 'portfolio', defaults: initialState })\n], PortfolioState);\nexport { PortfolioState };\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PortfolioState, [{\n        type: Injectable\n    }], function () { return [{ type: i1.PostsService }, { type: i2.Store }]; }, { getPost: [], getPostSuccess: [], getPostError: [], getPostPage: [], getPostPageSuccess: [], getPostPageError: [] }); })();\n","import { createSelector } from '@ngxs/store'\r\nimport { Entity } from '../models'\r\n\r\nexport class SharedSelectors {\r\n  static getEntities<T>(stateClass) {\r\n    return createSelector(\r\n      [stateClass],\r\n      state => state.entities as { [id: string]: Entity<T> },\r\n    )\r\n  }\r\n\r\n  static getEntityList<T>(stateClass) {\r\n    return createSelector(\r\n      [stateClass],\r\n      state => Object.values(state.entities) as Entity<T>[],\r\n    )\r\n  }\r\n\r\n  static getEntityIds(stateClass) {\r\n    return createSelector(\r\n      [stateClass],\r\n      state => Object.keys(state.entities),\r\n    )\r\n  }\r\n\r\n  static getEntityListByPageFn(stateClass) {\r\n    return (pageIds: number[]) => {\r\n      return createSelector(\r\n        [stateClass],\r\n        state => pageIds.map(id => state.entities[id]),\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { Selector } from '@ngxs/store';\nimport { PortfolioState } from './portfolio.state';\nimport { SharedSelectors } from 'src/app/shared/store/selectors';\nimport { serializePageQuery } from 'src/app/shared/util';\nexport class PortfolioSelectors {\n    static pagination(state) {\n        return state.pagination;\n    }\n    static postEntityByIdFn(entities) {\n        return (id) => entities[id];\n    }\n    static postQueryFn(pagination) {\n        return (options) => pagination[serializePageQuery(options)];\n    }\n    static postQueryPageFn(getPageQuery) {\n        return (options) => getPageQuery(options).pages[options.page];\n    }\n    static postEntitiesByQueryFn(entities, getPageQuery) {\n        return (options) => {\n            const pages = Object.values(getPageQuery(options).pages).filter(p => !p.isFetching);\n            const ids = pages.map(p => p.entity).flat();\n            return ids.map(id => entities[id]);\n        };\n    }\n}\nPortfolioSelectors.entities = SharedSelectors.getEntities(PortfolioState);\nPortfolioSelectors.ids = SharedSelectors.getEntityIds(PortfolioState);\nPortfolioSelectors.posts = SharedSelectors.getEntityList(PortfolioState);\n__decorate([\n    Selector([PortfolioState])\n], PortfolioSelectors, \"pagination\", null);\n__decorate([\n    Selector([PortfolioSelectors.entities])\n], PortfolioSelectors, \"postEntityByIdFn\", null);\n__decorate([\n    Selector([PortfolioSelectors.pagination])\n], PortfolioSelectors, \"postQueryFn\", null);\n__decorate([\n    Selector([PortfolioSelectors.postQueryFn])\n], PortfolioSelectors, \"postQueryPageFn\", null);\n__decorate([\n    Selector([PortfolioSelectors.entities, PortfolioSelectors.postQueryFn])\n], PortfolioSelectors, \"postEntitiesByQueryFn\", null);\n","import { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class LoadingSpinnerComponent {\n    constructor() {\n    }\n    ngOnInit() { }\n}\nLoadingSpinnerComponent.ɵfac = function LoadingSpinnerComponent_Factory(t) { return new (t || LoadingSpinnerComponent)(); };\nLoadingSpinnerComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LoadingSpinnerComponent, selectors: [[\"app-loading-spinner\"]], decls: 2, vars: 0, consts: [[\"role\", \"img\", \"aria-hidden\", \"true\", 1, \"post-detail__spinner\", 2, \"font-style\", \"normal\"]], template: function LoadingSpinnerComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵtext(1, \"\\u23F3\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\".post-detail__spinner[_ngcontent-%COMP%]{display:inline-block;margin-left:.5em;-webkit-animation:2.5s ease-in-out infinite rotate;animation:2.5s ease-in-out infinite rotate}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}15%,50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}100%,65%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}15%,50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}100%,65%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\"] });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LoadingSpinnerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-loading-spinner',\n                templateUrl: './loading-spinner.component.html',\n                styleUrls: ['./loading-spinner.component.css'],\n            }]\n    }], function () { return []; }, null); })();\n","<span class=\"post-detail__spinner\" style=\"font-style: normal;\" role=\"img\" aria-hidden=\"true\"\r\n  >⏳</span\r\n>\r\n","import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\nimport { GetPostPage } from '../../store/portfolio.actions';\nimport { PortfolioSelectors } from '../../store/portfolio.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../shared/components/loading-spinner/loading-spinner.component\";\nfunction PostMasterComponent_ng_container_2_section_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelement(1, \"h3\", 6);\n    i0.ɵɵelement(2, \"p\", 6);\n    i0.ɵɵelementStart(3, \"a\", 7);\n    i0.ɵɵtext(4, \"Projekt ansehen \\u2192\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"hr\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const post_r6 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", post_r6.title.rendered, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.getTeaser(post_r6.acf.beschreibung), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", post_r6.id);\n} }\nfunction PostMasterComponent_ng_container_2_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PostMasterComponent_ng_container_2_button_4_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.requestNextPage(); });\n    i0.ɵɵtext(1, \" Mehr laden... \");\n    i0.ɵɵelementEnd();\n} }\nfunction PostMasterComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PostMasterComponent_ng_container_2_section_1_Template, 6, 3, \"section\", 3);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"footer\", 4);\n    i0.ɵɵtemplate(4, PostMasterComponent_ng_container_2_button_4_Template, 2, 0, \"button\", 5);\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r0.posts$));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 4, ctx_r0.query$).totalPages > ctx_r0.pagination.page && i0.ɵɵpipeBind1(6, 6, ctx_r0.isFetching$) === false);\n} }\nfunction PostMasterComponent_ng_template_4_p_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \" Keine Projekte vorhanden. \");\n    i0.ɵɵelementStart(2, \"span\", 10);\n    i0.ɵɵtext(3, \"\\uD83D\\uDEAB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} }\nfunction PostMasterComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵtemplate(0, PostMasterComponent_ng_template_4_p_0_Template, 4, 0, \"p\", 2);\n    i0.ɵɵpipe(1, \"async\");\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx_r2.isFetching$) === false);\n} }\nfunction PostMasterComponent_p_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \" Projekte werden geladen... \");\n    i0.ɵɵelement(2, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n} }\nconst linebreakRegex = /<br\\s?\\/?>(<\\/br>)?/g;\nexport class PostMasterComponent {\n    constructor(store) {\n        this.store = store;\n        this.pagination = { page: 1, perPage: 8 };\n        this.posts$ = this.postEntitiesByQueryFn$.pipe(map(postsForQuery => postsForQuery(this.pagination)), map(postEntities => postEntities.map(p => p.entity)));\n        this.query$ = this.postQueryFn$.pipe(map(getPostQuery => getPostQuery(this.pagination)));\n        this.isFetching$ = this.query$.pipe(map(q => Object.values(q.pages).some(p => p.isFetching)));\n    }\n    ngOnInit() {\n        this.loadPage();\n    }\n    loadPage() {\n        this.store.dispatch(new GetPostPage(this.pagination));\n    }\n    requestNextPage() {\n        this.pagination.page++;\n        this.loadPage();\n    }\n    getTeaser(text) {\n        text = text.replace(linebreakRegex, '');\n        if (text.length < 150)\n            return text;\n        return `${text.slice(0, 145)}...`;\n    }\n}\nPostMasterComponent.ɵfac = function PostMasterComponent_Factory(t) { return new (t || PostMasterComponent)(i0.ɵɵdirectiveInject(i1.Store)); };\nPostMasterComponent.ɵcmp = i0.ɵɵdefineComponent({ type: PostMasterComponent, selectors: [[\"app-post-master\"]], decls: 8, vars: 7, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noPosts\", \"\"], [\"class\", \"post-master__status-msg\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"post-master__footer\"], [\"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [3, \"innerHTML\"], [3, \"routerLink\"], [\"type\", \"button\", 3, \"click\"], [1, \"post-master__status-msg\"], [\"aria-hidden\", \"true\", 2, \"font-style\", \"normal\"]], template: function PostMasterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"DMP Portfolio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, PostMasterComponent_ng_container_2_Template, 7, 8, \"ng-container\", 0);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵtemplate(4, PostMasterComponent_ng_template_4_Template, 2, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(6, PostMasterComponent_p_6_Template, 3, 0, \"p\", 2);\n        i0.ɵɵpipe(7, \"async\");\n    } if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 3, ctx.posts$).length)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 5, ctx.isFetching$));\n    } }, directives: [i2.NgIf, i2.NgForOf, i3.RouterLinkWithHref, i4.LoadingSpinnerComponent], pipes: [i2.AsyncPipe], styles: [\"section[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{display:inline}a[_ngcontent-%COMP%]{margin-left:1em}.post-master__status-msg[_ngcontent-%COMP%]{text-align:center;font-style:italic;font-weight:bolder}.post-master__footer[_ngcontent-%COMP%]{text-align:center;margin-top:2rem}\"] });\n__decorate([\n    Select(PortfolioSelectors.postQueryFn)\n], PostMasterComponent.prototype, \"postQueryFn$\", void 0);\n__decorate([\n    Select(PortfolioSelectors.postEntitiesByQueryFn)\n], PostMasterComponent.prototype, \"postEntitiesByQueryFn$\", void 0);\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PostMasterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-post-master',\n                templateUrl: './post-master.component.html',\n                styleUrls: ['./post-master.component.css'],\n            }]\n    }], function () { return [{ type: i1.Store }]; }, { postQueryFn$: [], postEntitiesByQueryFn$: [] }); })();\n","<h2>DMP Portfolio</h2>\r\n<ng-container *ngIf=\"(posts$ | async).length; else noPosts\">\r\n  <section *ngFor=\"let post of posts$ | async\">\r\n    <h3 [innerHTML]=\"post.title.rendered\"></h3>\r\n    <p [innerHTML]=\"getTeaser(post.acf.beschreibung)\"></p>\r\n    <a routerLink=\"{{ post.id }}\">Projekt ansehen →</a>\r\n    <hr />\r\n  </section>\r\n\r\n  <footer class=\"post-master__footer\">\r\n    <button\r\n      *ngIf=\"(query$ | async).totalPages > pagination.page && (isFetching$ | async) === false\"\r\n      (click)=\"requestNextPage()\"\r\n      type=\"button\"\r\n    >\r\n      Mehr laden...\r\n    </button>\r\n  </footer>\r\n</ng-container>\r\n\r\n<ng-template #noPosts>\r\n  <p *ngIf=\"(isFetching$ | async) === false\" class=\"post-master__status-msg\">\r\n    Keine Projekte vorhanden. <span aria-hidden=\"true\" style=\"font-style: normal\">🚫</span>\r\n  </p>\r\n</ng-template>\r\n\r\n<p *ngIf=\"isFetching$ | async\" class=\"post-master__status-msg\">\r\n  Projekte werden geladen... <app-loading-spinner></app-loading-spinner>\r\n</p>\r\n","import { Component, OnInit } from '@angular/core'\r\nimport { Select, Store } from '@ngxs/store'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { Post } from '../../models/post.model'\r\nimport { GetPostPage } from '../../store/portfolio.actions'\r\nimport { PortfolioSelectors } from '../../store/portfolio.selectors'\r\nimport { PostRequestOptions } from '../../posts.service'\r\n\r\nconst linebreakRegex = /<br\\s?\\/?>(<\\/br>)?/g\r\n\r\ntype PostQueryFn = ReturnType<typeof PortfolioSelectors.postQueryFn>\r\ntype EntitiesByQueryFn$ = Observable<ReturnType<typeof PortfolioSelectors.postEntitiesByQueryFn>>\r\n\r\n@Component({\r\n  selector: 'app-post-master',\r\n  templateUrl: './post-master.component.html',\r\n  styleUrls: ['./post-master.component.css'],\r\n})\r\nexport class PostMasterComponent implements OnInit {\r\n  @Select(PortfolioSelectors.postQueryFn) postQueryFn$: Observable<PostQueryFn>\r\n  @Select(PortfolioSelectors.postEntitiesByQueryFn) postEntitiesByQueryFn$: EntitiesByQueryFn$\r\n  pagination: PostRequestOptions = { page: 1, perPage: 8 }\r\n\r\n  posts$: Observable<Post[]>\r\n  query$: Observable<ReturnType<PostQueryFn>>\r\n  isFetching$: Observable<boolean>\r\n\r\n  constructor(private store: Store) {\r\n    this.posts$ = this.postEntitiesByQueryFn$.pipe(\r\n      map(postsForQuery => postsForQuery(this.pagination)),\r\n      map(postEntities => postEntities.map(p => p.entity)),\r\n    )\r\n    this.query$ = this.postQueryFn$.pipe(map(getPostQuery => getPostQuery(this.pagination)))\r\n    this.isFetching$ = this.query$.pipe(map(q => Object.values(q.pages).some(p => p.isFetching)))\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadPage()\r\n  }\r\n  loadPage() {\r\n    this.store.dispatch(new GetPostPage(this.pagination))\r\n  }\r\n  requestNextPage() {\r\n    this.pagination.page++\r\n    this.loadPage()\r\n  }\r\n\r\n  getTeaser(text: string) {\r\n    text = text.replace(linebreakRegex, '')\r\n\r\n    if (text.length < 150) return text\r\n    return `${text.slice(0, 145)}...`\r\n  }\r\n}\r\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, NgZone, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { combineLatest, merge, Observable, of, pipe, Subject } from 'rxjs';\nimport { combineLatest as combineLatest$1, distinctUntilChanged, filter, first, flatMap, map, publish, scan, skipWhile, startWith, take, takeUntil, withLatestFrom } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"youtubeContainer\"];\nconst DEFAULT_PLAYER_WIDTH = 640;\n/** @type {?} */\nconst DEFAULT_PLAYER_HEIGHT = 390;\n/**\n * Whether we're currently rendering inside a browser. Equivalent of `Platform.isBrowser`,\n * but copied over here so we don't have to add another dependency.\n * @type {?}\n */\nconst isBrowser = typeof window === 'object' && !!window;\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\nclass YouTubePlayer {\n    /**\n     * @param {?} _ngZone\n     */\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._videoIdObs = new EventEmitter();\n        this._height = DEFAULT_PLAYER_HEIGHT;\n        this._heightObs = new EventEmitter();\n        this._width = DEFAULT_PLAYER_WIDTH;\n        this._widthObs = new EventEmitter();\n        this._startSeconds = new EventEmitter();\n        this._endSeconds = new EventEmitter();\n        this._suggestedQuality = new EventEmitter();\n        /**\n         * Outputs are direct proxies from the player itself.\n         */\n        this.ready = new EventEmitter();\n        this.stateChange = new EventEmitter();\n        this.error = new EventEmitter();\n        this.apiChange = new EventEmitter();\n        this.playbackQualityChange = new EventEmitter();\n        this.playbackRateChange = new EventEmitter();\n        this._youtubeContainer = new EventEmitter();\n        this._destroyed = new EventEmitter();\n    }\n    /**\n     * YouTube Video ID to view\n     * @return {?}\n     */\n    get videoId() { return this._videoId; }\n    /**\n     * @param {?} videoId\n     * @return {?}\n     */\n    set videoId(videoId) {\n        this._videoId = videoId;\n        this._videoIdObs.emit(videoId);\n    }\n    /**\n     * Height of video player\n     * @return {?}\n     */\n    get height() { return this._height; }\n    /**\n     * @param {?} height\n     * @return {?}\n     */\n    set height(height) {\n        this._height = height || DEFAULT_PLAYER_HEIGHT;\n        this._heightObs.emit(this._height);\n    }\n    /**\n     * Width of video player\n     * @return {?}\n     */\n    get width() { return this._width; }\n    /**\n     * @param {?} width\n     * @return {?}\n     */\n    set width(width) {\n        this._width = width || DEFAULT_PLAYER_WIDTH;\n        this._widthObs.emit(this._width);\n    }\n    /**\n     * The moment when the player is supposed to start playing\n     * @param {?} startSeconds\n     * @return {?}\n     */\n    set startSeconds(startSeconds) {\n        this._startSeconds.emit(startSeconds);\n    }\n    /**\n     * The moment when the player is supposed to stop playing\n     * @param {?} endSeconds\n     * @return {?}\n     */\n    set endSeconds(endSeconds) {\n        this._endSeconds.emit(endSeconds);\n    }\n    /**\n     * The suggested quality of the player\n     * @param {?} suggestedQuality\n     * @return {?}\n     */\n    set suggestedQuality(suggestedQuality) {\n        this._suggestedQuality.emit(suggestedQuality);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Don't do anything if we're not in a browser environment.\n        if (!isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        let iframeApiAvailableObs = of(true);\n        if (!window.YT) {\n            if (this.showBeforeIframeApiLoads) {\n                throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' +\n                    'Please install the YouTube Player API Reference for iframe Embeds: ' +\n                    'https://developers.google.com/youtube/iframe_api_reference');\n            }\n            /** @type {?} */\n            const iframeApiAvailableSubject = new Subject();\n            window.onYouTubeIframeAPIReady = (/**\n             * @return {?}\n             */\n            () => {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => iframeApiAvailableSubject.next(true)));\n            });\n            iframeApiAvailableObs = iframeApiAvailableSubject.pipe(take(1), startWith(false));\n        }\n        // Add initial values to all of the inputs.\n        /** @type {?} */\n        const videoIdObs = this._videoIdObs.pipe(startWith(this._videoId));\n        /** @type {?} */\n        const widthObs = this._widthObs.pipe(startWith(this._width));\n        /** @type {?} */\n        const heightObs = this._heightObs.pipe(startWith(this._height));\n        /** @type {?} */\n        const startSecondsObs = this._startSeconds.pipe(startWith(undefined));\n        /** @type {?} */\n        const endSecondsObs = this._endSeconds.pipe(startWith(undefined));\n        /** @type {?} */\n        const suggestedQualityObs = this._suggestedQuality.pipe(startWith(undefined));\n        /**\n         * An observable of the currently loaded player.\n         * @type {?}\n         */\n        const playerObs = createPlayerObservable(this._youtubeContainer, videoIdObs, iframeApiAvailableObs, widthObs, heightObs, this.createEventsBoundInZone()).pipe(waitUntilReady(), takeUntil(this._destroyed), publish());\n        /** Set up side effects to bind inputs to the player. */\n        playerObs.subscribe((/**\n         * @param {?} player\n         * @return {?}\n         */\n        player => this._player = player));\n        bindSizeToPlayer(playerObs, widthObs, heightObs);\n        bindSuggestedQualityToPlayer(playerObs, suggestedQualityObs);\n        bindCueVideoCall(playerObs, videoIdObs, startSecondsObs, endSecondsObs, suggestedQualityObs, this._destroyed);\n        // After all of the subscriptions are set up, connect the observable.\n        ((/** @type {?} */ (playerObs))).connect();\n    }\n    /**\n     * @return {?}\n     */\n    createEventsBoundInZone() {\n        return {\n            onReady: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.ready.emit(event))),\n            onStateChange: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.stateChange.emit(event))),\n            onPlaybackQualityChange: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.playbackQualityChange.emit(event))),\n            onPlaybackRateChange: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.playbackRateChange.emit(event))),\n            onError: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.error.emit(event))),\n            onApiChange: this._runInZone((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => this.apiChange.emit(event))),\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._youtubeContainer.emit(this.youtubeContainer.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._player) {\n            this._player.destroy();\n            window.onYouTubeIframeAPIReady = undefined;\n            this._destroyed.emit();\n        }\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} callback\n     * @return {?}\n     */\n    _runInZone(callback) {\n        return (/**\n         * @param {...?} args\n         * @return {?}\n         */\n        (...args) => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => callback(...args)));\n        });\n    }\n    /** Proxied methods. */\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#playVideo\n     * @return {?}\n     */\n    playVideo() {\n        if (this._player) {\n            this._player.playVideo();\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#pauseVideo\n     * @return {?}\n     */\n    pauseVideo() {\n        if (this._player) {\n            this._player.pauseVideo();\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#stopVideo\n     * @return {?}\n     */\n    stopVideo() {\n        if (this._player) {\n            this._player.stopVideo();\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#seekTo\n     * @param {?} seconds\n     * @param {?} allowSeekAhead\n     * @return {?}\n     */\n    seekTo(seconds, allowSeekAhead) {\n        if (this._player) {\n            this._player.seekTo(seconds, allowSeekAhead);\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#mute\n     * @return {?}\n     */\n    mute() {\n        if (this._player) {\n            this._player.mute();\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#unMute\n     * @return {?}\n     */\n    unMute() {\n        if (this._player) {\n            this._player.unMute();\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#isMuted\n     * @return {?}\n     */\n    isMuted() {\n        return !this._player || this._player.isMuted();\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#setVolume\n     * @param {?} volume\n     * @return {?}\n     */\n    setVolume(volume) {\n        if (this._player) {\n            this._player.setVolume(volume);\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVolume\n     * @return {?}\n     */\n    getVolume() {\n        return this._player ? this._player.getVolume() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n     * @param {?} playbackRate\n     * @return {?}\n     */\n    setPlaybackRate(playbackRate) {\n        if (this._player) {\n            return this._player.setPlaybackRate(playbackRate);\n        }\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate\n     * @return {?}\n     */\n    getPlaybackRate() {\n        return this._player ? this._player.getPlaybackRate() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates\n     * @return {?}\n     */\n    getAvailablePlaybackRates() {\n        return this._player ? this._player.getAvailablePlaybackRates() : [];\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction\n     * @return {?}\n     */\n    getVideoLoadedFraction() {\n        return this._player ? this._player.getVideoLoadedFraction() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlayerState\n     * @return {?}\n     */\n    getPlayerState() {\n        if (!isBrowser || !window.YT) {\n            return undefined;\n        }\n        return this._player ? this._player.getPlayerState() : -1 /* UNSTARTED */;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime\n     * @return {?}\n     */\n    getCurrentTime() {\n        return this._player ? this._player.getCurrentTime() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality\n     * @return {?}\n     */\n    getPlaybackQuality() {\n        return this._player ? this._player.getPlaybackQuality() : 'default';\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels\n     * @return {?}\n     */\n    getAvailableQualityLevels() {\n        return this._player ? this._player.getAvailableQualityLevels() : [];\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getDuration\n     * @return {?}\n     */\n    getDuration() {\n        return this._player ? this._player.getDuration() : 0;\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl\n     * @return {?}\n     */\n    getVideoUrl() {\n        return this._player ? this._player.getVideoUrl() : '';\n    }\n    /**\n     * See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode\n     * @return {?}\n     */\n    getVideoEmbedCode() {\n        return this._player ? this._player.getVideoEmbedCode() : '';\n    }\n}\nYouTubePlayer.ɵfac = function YouTubePlayer_Factory(t) { return new (t || YouTubePlayer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYouTubePlayer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: YouTubePlayer, selectors: [[\"youtube-player\"]], viewQuery: function YouTubePlayer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.youtubeContainer = _t.first);\n    } }, inputs: { videoId: \"videoId\", height: \"height\", width: \"width\", startSeconds: \"startSeconds\", endSeconds: \"endSeconds\", suggestedQuality: \"suggestedQuality\", showBeforeIframeApiLoads: \"showBeforeIframeApiLoads\" }, outputs: { ready: \"ready\", stateChange: \"stateChange\", error: \"error\", apiChange: \"apiChange\", playbackQualityChange: \"playbackQualityChange\", playbackRateChange: \"playbackRateChange\" }, decls: 2, vars: 0, consts: [[\"youtubeContainer\", \"\"]], template: function YouTubePlayer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nYouTubePlayer.ctorParameters = () => [\n    { type: NgZone }\n];\nYouTubePlayer.propDecorators = {\n    videoId: [{ type: Input }],\n    height: [{ type: Input }],\n    width: [{ type: Input }],\n    startSeconds: [{ type: Input }],\n    endSeconds: [{ type: Input }],\n    suggestedQuality: [{ type: Input }],\n    showBeforeIframeApiLoads: [{ type: Input }],\n    ready: [{ type: Output }],\n    stateChange: [{ type: Output }],\n    error: [{ type: Output }],\n    apiChange: [{ type: Output }],\n    playbackQualityChange: [{ type: Output }],\n    playbackRateChange: [{ type: Output }],\n    youtubeContainer: [{ type: ViewChild, args: ['youtubeContainer', { static: false },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YouTubePlayer, [{\n        type: Component,\n        args: [{ selector: 'youtube-player',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                // This div is *replaced* by the YouTube player embed.\n                template: '<div #youtubeContainer></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { ready: [{\n            type: Output\n        }], stateChange: [{\n            type: Output\n        }], error: [{\n            type: Output\n        }], apiChange: [{\n            type: Output\n        }], playbackQualityChange: [{\n            type: Output\n        }], playbackRateChange: [{\n            type: Output\n        }], videoId: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], startSeconds: [{\n            type: Input\n        }], endSeconds: [{\n            type: Input\n        }], suggestedQuality: [{\n            type: Input\n        }], showBeforeIframeApiLoads: [{\n            type: Input\n        }], youtubeContainer: [{\n            type: ViewChild,\n            args: ['youtubeContainer', { static: false }]\n        }] }); })();\n/**\n * Listens to changes to the given width and height and sets it on the player.\n * @param {?} playerObs\n * @param {?} widthObs\n * @param {?} heightObs\n * @return {?}\n */\nfunction bindSizeToPlayer(playerObs, widthObs, heightObs) {\n    return combineLatest([playerObs, widthObs, heightObs])\n        .subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, width, height]) => player && player.setSize(width, height)));\n}\n/**\n * Listens to changes from the suggested quality and sets it on the given player.\n * @param {?} playerObs\n * @param {?} suggestedQualityObs\n * @return {?}\n */\nfunction bindSuggestedQualityToPlayer(playerObs, suggestedQualityObs) {\n    return combineLatest([\n        playerObs,\n        suggestedQualityObs\n    ]).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, suggestedQuality]) => player && suggestedQuality && player.setPlaybackQuality(suggestedQuality)));\n}\n/**\n * Returns an observable that emits the loaded player once it's ready. Certain properties/methods\n * won't be available until the iframe finishes loading.\n * @return {?}\n */\nfunction waitUntilReady() {\n    return flatMap((/**\n     * @param {?} player\n     * @return {?}\n     */\n    player => {\n        if (!player) {\n            return of(undefined);\n        }\n        if ('getPlayerStatus' in player) {\n            return of((/** @type {?} */ (player)));\n        }\n        // The player is not initialized fully until the ready is called.\n        return fromPlayerOnReady(player)\n            .pipe(first(), startWith(undefined));\n    }));\n}\n/**\n * Since removeEventListener is not on Player when it's initialized, we can't use fromEvent.\n * @param {?} player\n * @return {?}\n */\nfunction fromPlayerOnReady(player) {\n    return new Observable((/**\n     * @param {?} emitter\n     * @return {?}\n     */\n    emitter => {\n        /** @type {?} */\n        let aborted = false;\n        /** @type {?} */\n        const onReady = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (aborted) {\n                return;\n            }\n            event.target.removeEventListener('onReady', onReady);\n            emitter.next(event.target);\n        });\n        player.addEventListener('onReady', onReady);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            aborted = true;\n        });\n    }));\n}\n/**\n * Create an observable for the player based on the given options.\n * @param {?} youtubeContainer\n * @param {?} videoIdObs\n * @param {?} iframeApiAvailableObs\n * @param {?} widthObs\n * @param {?} heightObs\n * @param {?} events\n * @return {?}\n */\nfunction createPlayerObservable(youtubeContainer, videoIdObs, iframeApiAvailableObs, widthObs, heightObs, events) {\n    /** @type {?} */\n    const playerOptions = videoIdObs\n        .pipe(withLatestFrom(combineLatest([widthObs, heightObs])), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([videoId, [width, height]]) => videoId ? ({ videoId, width, height, events }) : undefined)));\n    return combineLatest([youtubeContainer, playerOptions])\n        .pipe(skipUntilRememberLatest(iframeApiAvailableObs), scan(syncPlayerState, undefined), distinctUntilChanged());\n}\n/**\n * Skips the given observable until the other observable emits true, then emit the latest.\n * @template T\n * @param {?} notifier\n * @return {?}\n */\nfunction skipUntilRememberLatest(notifier) {\n    return pipe(combineLatest$1(notifier), skipWhile((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([_, doneSkipping]) => !doneSkipping)), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value]) => value)));\n}\n/**\n * Destroy the player if there are no options, or create the player if there are options.\n * @param {?} player\n * @param {?} __1\n * @return {?}\n */\nfunction syncPlayerState(player, [container, videoOptions]) {\n    if (!videoOptions) {\n        if (player) {\n            player.destroy();\n        }\n        return;\n    }\n    if (player) {\n        return player;\n    }\n    /** @type {?} */\n    const newPlayer = new YT.Player(container, videoOptions);\n    // Bind videoId for future use.\n    newPlayer.videoId = videoOptions.videoId;\n    return newPlayer;\n}\n/**\n * Call cueVideoById if the videoId changes, or when start or end seconds change. cueVideoById will\n * change the loaded video id to the given videoId, and set the start and end times to the given\n * start/end seconds.\n * @param {?} playerObs\n * @param {?} videoIdObs\n * @param {?} startSecondsObs\n * @param {?} endSecondsObs\n * @param {?} suggestedQualityObs\n * @param {?} destroyed\n * @return {?}\n */\nfunction bindCueVideoCall(playerObs, videoIdObs, startSecondsObs, endSecondsObs, suggestedQualityObs, destroyed) {\n    /** @type {?} */\n    const cueOptionsObs = combineLatest([startSecondsObs, endSecondsObs])\n        .pipe(map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([startSeconds, endSeconds]) => ({ startSeconds, endSeconds }))));\n    // Only respond to changes in cue options if the player is not running.\n    /** @type {?} */\n    const filteredCueOptions = cueOptionsObs\n        .pipe(filterOnOther(playerObs, (/**\n     * @param {?} player\n     * @return {?}\n     */\n    player => !!player && !hasPlayerStarted(player))));\n    // If the video id changed, there's no reason to run 'cue' unless the player\n    // was initialized with a different video id.\n    /** @type {?} */\n    const changedVideoId = videoIdObs\n        .pipe(filterOnOther(playerObs, (/**\n     * @param {?} player\n     * @param {?} videoId\n     * @return {?}\n     */\n    (player, videoId) => !!player && player.videoId !== videoId)));\n    // If the player changed, there's no reason to run 'cue' unless there are cue options.\n    /** @type {?} */\n    const changedPlayer = playerObs.pipe(filterOnOther(combineLatest([videoIdObs, cueOptionsObs]), (/**\n     * @param {?} __0\n     * @param {?} player\n     * @return {?}\n     */\n    ([videoId, cueOptions], player) => !!player &&\n        (videoId != player.videoId || !!cueOptions.startSeconds || !!cueOptions.endSeconds))));\n    merge(changedPlayer, changedVideoId, filteredCueOptions)\n        .pipe(withLatestFrom(combineLatest([playerObs, videoIdObs, cueOptionsObs, suggestedQualityObs])), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([_, values]) => values)), takeUntil(destroyed))\n        .subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([player, videoId, cueOptions, suggestedQuality]) => {\n        if (!videoId || !player) {\n            return;\n        }\n        player.videoId = videoId;\n        player.cueVideoById(Object.assign({ videoId,\n            suggestedQuality }, cueOptions));\n    }));\n}\n/**\n * @param {?} player\n * @return {?}\n */\nfunction hasPlayerStarted(player) {\n    return [-1 /* UNSTARTED */, 5 /* CUED */].indexOf(player.getPlayerState()) === -1;\n}\n/**\n * Combines the two observables temporarily for the filter function.\n * @template R, T\n * @param {?} otherObs\n * @param {?} filterFn\n * @return {?}\n */\nfunction filterOnOther(otherObs, filterFn) {\n    return pipe(withLatestFrom(otherObs), filter((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value, other]) => filterFn(other, value))), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([value]) => value)));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst COMPONENTS = [YouTubePlayer];\nclass YouTubePlayerModule {\n}\nYouTubePlayerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: YouTubePlayerModule });\nYouTubePlayerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function YouTubePlayerModule_Factory(t) { return new (t || YouTubePlayerModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(YouTubePlayerModule, { declarations: [YouTubePlayer], exports: [YouTubePlayer] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YouTubePlayerModule, [{\n        type: NgModule,\n        args: [{\n                declarations: COMPONENTS,\n                exports: COMPONENTS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { YouTubePlayer, YouTubePlayerModule };\n\n//# sourceMappingURL=youtube-player.js.map","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map","import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\nexport function publish(selector) {\n    return selector ?\n        multicast(() => new Subject(), selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map","import { Component, Input } from '@angular/core';\nimport { getYoutubeId } from 'src/app/shared/util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/youtube-player\";\nfunction ShowcaseComponent_img_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n} if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r26.image.sizes.large, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r26.image.alt || ctx_r26.image.title || ctx_r26.image.name || \"\")(\"width\", ctx_r26.image.sizes[\"large-width\"])(\"height\", ctx_r26.image.sizes[\"large-height\"]);\n} }\nfunction ShowcaseComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"youtube-player\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"videoId\", ctx_r27.videoId);\n} }\nexport class ShowcaseComponent {\n    constructor() {\n    }\n    ngOnInit() {\n        if (this.type === 'video') {\n            this.videoId = getYoutubeId(this.video);\n            // this.iframeHTML = this.embedService.embed(this.video)\n            // This code loads the IFrame Player API code asynchronously, according to the instructions at\n            // https://developers.google.com/youtube/iframe_api_reference#Getting_Started\n            const tag = document.createElement('script');\n            tag.src = 'https://www.youtube.com/iframe_api';\n            document.body.appendChild(tag);\n        }\n    }\n}\nShowcaseComponent.ɵfac = function ShowcaseComponent_Factory(t) { return new (t || ShowcaseComponent)(); };\nShowcaseComponent.ɵcmp = i0.ɵɵdefineComponent({ type: ShowcaseComponent, selectors: [[\"app-showcase\"]], inputs: { type: \"type\", image: \"image\", video: \"video\" }, decls: 3, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"src\", \"alt\", \"width\", \"height\", 4, \"ngSwitchCase\"], [\"class\", \"showcase__iframe-container\", 4, \"ngSwitchCase\"], [3, \"src\", \"alt\", \"width\", \"height\"], [1, \"showcase__iframe-container\"], [3, \"videoId\"]], template: function ShowcaseComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, ShowcaseComponent_img_1_Template, 1, 4, \"img\", 1);\n        i0.ɵɵtemplate(2, ShowcaseComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"image\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"video\");\n    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, i2.YouTubePlayer], styles: [\".showcase__iframe-container[_ngcontent-%COMP%]{position:relative;width:100%;padding-top:56.25%;height:0;background:url(video.2e6558147ccb0c5752db.png) center/20% no-repeat,#000}.showcase__iframe-container[_ngcontent-%COMP%] iframe{position:absolute;top:0;left:0;width:100%;height:100%}\"] });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(ShowcaseComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-showcase',\n                templateUrl: './showcase.component.html',\n                styleUrls: ['./showcase.component.css'],\n            }]\n    }], function () { return []; }, { type: [{\n            type: Input\n        }], image: [{\n            type: Input\n        }], video: [{\n            type: Input\n        }] }); })();\n","<ng-container [ngSwitch]=\"type\">\r\n  <img\r\n    *ngSwitchCase=\"'image'\"\r\n    [src]=\"image.sizes.large\"\r\n    [alt]=\"image.alt || image.title || image.name || ''\"\r\n    [width]=\"image.sizes['large-width']\"\r\n    [height]=\"image.sizes['large-height']\"\r\n  />\r\n\r\n  <div *ngSwitchCase=\"'video'\" class=\"showcase__iframe-container\">\r\n    <youtube-player [videoId]=\"videoId\"></youtube-player>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, Input } from '@angular/core'\r\nimport { ShowcaseFormat, Image, YoutubeURL } from '../../models/post.model'\r\nimport { getYoutubeId } from 'src/app/shared/util'\r\n\r\n@Component({\r\n  selector: 'app-showcase',\r\n  templateUrl: './showcase.component.html',\r\n  styleUrls: ['./showcase.component.css'],\r\n})\r\nexport class ShowcaseComponent implements OnInit {\r\n  @Input() type: ShowcaseFormat\r\n  @Input() image: Image\r\n  @Input() video: YoutubeURL\r\n\r\n  public videoId: string\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.type === 'video') {\r\n      this.videoId = getYoutubeId(this.video)\r\n\r\n      // this.iframeHTML = this.embedService.embed(this.video)\r\n      // This code loads the IFrame Player API code asynchronously, according to the instructions at\r\n      // https://developers.google.com/youtube/iframe_api_reference#Getting_Started\r\n      const tag = document.createElement('script')\r\n\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      document.body.appendChild(tag)\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BriefingComponent_span_10_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n} if (rf & 2) {\n    const s_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", s_r31.name + \"<br>\", i0.ɵɵsanitizeHtml);\n} }\nfunction BriefingComponent_span_19_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n} if (rf & 2) {\n    const s_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", s_r32.name + \"<br>\", i0.ɵɵsanitizeHtml);\n} }\nfunction BriefingComponent_span_24_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n} if (rf & 2) {\n    const d_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", d_r33.name + \"<br>\", i0.ɵɵsanitizeHtml);\n} }\nexport class BriefingComponent {\n    ngOnInit() { }\n}\nBriefingComponent.ɵfac = function BriefingComponent_Factory(t) { return new (t || BriefingComponent)(); };\nBriefingComponent.ɵcmp = i0.ɵɵdefineComponent({ type: BriefingComponent, selectors: [[\"app-briefing\"]], inputs: { data: \"data\" }, decls: 25, vars: 7, consts: [[\"scope\", \"row\"], [3, \"innerHTML\"], [3, \"innerHTML\", 4, \"ngFor\", \"ngForOf\"]], template: function BriefingComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\");\n        i0.ɵɵelementStart(1, \"tbody\");\n        i0.ɵɵelementStart(2, \"tr\");\n        i0.ɵɵelementStart(3, \"th\", 0);\n        i0.ɵɵtext(4, \"Kategorie:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"td\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"tr\");\n        i0.ɵɵelementStart(7, \"th\", 0);\n        i0.ɵɵtext(8, \"Semester:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"td\");\n        i0.ɵɵtemplate(10, BriefingComponent_span_10_Template, 1, 1, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"tr\");\n        i0.ɵɵelementStart(12, \"th\", 0);\n        i0.ɵɵtext(13, \"Erstellunsjahr:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"td\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"tr\");\n        i0.ɵɵelementStart(16, \"th\", 0);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵtemplate(19, BriefingComponent_span_19_Template, 1, 1, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"tr\");\n        i0.ɵɵelementStart(21, \"th\", 0);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"td\");\n        i0.ɵɵtemplate(24, BriefingComponent_span_24_Template, 1, 1, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"innerHTML\", ctx.data.modul.name, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data.semester);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"innerHTML\", ctx.data.erstellungsjahr, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.studierende.length > 1 ? \"Studierende\" : \"Student*in\", \":\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data.studierende);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.data.dozierende.length > 1 ? \"Dozierende\" : \"Dozent*in\", \":\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data.dozierende);\n    } }, directives: [i1.NgForOf], styles: [\"th[_ngcontent-%COMP%]{vertical-align:top;border:none}\"] });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(BriefingComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-briefing',\n                templateUrl: './briefing.component.html',\n                styleUrls: ['./briefing.component.css'],\n            }]\n    }], null, { data: [{\n            type: Input\n        }] }); })();\n","<table>\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">Kategorie:</th>\r\n      <td [innerHTML]=\"data.modul.name\"></td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Semester:</th>\r\n      <td>\r\n        <span *ngFor=\"let s of data.semester\" [innerHTML]=\"s.name + '<br>'\"></span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">Erstellunsjahr:</th>\r\n      <td [innerHTML]=\"data.erstellungsjahr\"></td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">{{ data.studierende.length > 1 ? 'Studierende' : 'Student*in' }}:</th>\r\n      <td>\r\n        <span *ngFor=\"let s of data.studierende\" [innerHTML]=\"s.name + '<br>'\"></span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">{{ data.dozierende.length > 1 ? 'Dozierende' : 'Dozent*in' }}:</th>\r\n      <td>\r\n        <span *ngFor=\"let d of data.dozierende\" [innerHTML]=\"d.name + '<br>'\"></span>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit, Input } from '@angular/core'\r\nimport { Post } from '../../models/post.model'\r\n\r\n@Component({\r\n  selector: 'app-briefing',\r\n  templateUrl: './briefing.component.html',\r\n  styleUrls: ['./briefing.component.css'],\r\n})\r\nexport class BriefingComponent implements OnInit {\r\n  @Input() data: Post['acf']\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\nimport { GetPost } from '../../store/portfolio.actions';\nimport { PortfolioSelectors } from '../../store/portfolio.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/showcase/showcase.component\";\nimport * as i5 from \"../../components/briefing/briefing.component\";\nimport * as i6 from \"../../../shared/components/loading-spinner/loading-spinner.component\";\nfunction PostDetailComponent_ng_container_0_section_1_span_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tag_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tag_r21.name);\n} }\nfunction PostDetailComponent_ng_container_0_section_1_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \" \\u2013 \");\n    i0.ɵɵtemplate(2, PostDetailComponent_ng_container_0_section_1_span_4_span_2_Template, 2, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const post_r16 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", post_r16.acf.schlagworte);\n} }\nfunction PostDetailComponent_ng_container_0_section_1_h3_10_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Galerie\");\n    i0.ɵɵelementEnd();\n} }\nfunction PostDetailComponent_ng_container_0_section_1_img_11_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 14);\n} if (rf & 2) {\n    const image_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"src\", image_r23.sizes.medium, i0.ɵɵsanitizeUrl)(\"alt\", image_r23.alt || image_r23.title || image_r23.name || \"\")(\"width\", image_r23.sizes[\"medium-width\"])(\"height\", image_r23.sizes[\"medium-height\"]);\n} }\nfunction PostDetailComponent_ng_container_0_section_1_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelement(1, \"h2\", 3);\n    i0.ɵɵelementStart(2, \"p\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, PostDetailComponent_ng_container_0_section_1_span_4_Template, 3, 1, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"app-showcase\", 6);\n    i0.ɵɵelement(6, \"p\", 3);\n    i0.ɵɵelementStart(7, \"h3\");\n    i0.ɵɵtext(8, \"Steckbrief\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"app-briefing\", 7);\n    i0.ɵɵtemplate(10, PostDetailComponent_ng_container_0_section_1_h3_10_Template, 2, 0, \"h3\", 8);\n    i0.ɵɵtemplate(11, PostDetailComponent_ng_container_0_section_1_img_11_Template, 1, 4, \"img\", 9);\n    i0.ɵɵelementStart(12, \"footer\", 10);\n    i0.ɵɵelementStart(13, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PostDetailComponent_ng_container_0_section_1_Template_button_click_13_listener($event) { i0.ɵɵrestoreView(_r25); const ctx_r24 = i0.ɵɵnextContext(2); return ctx_r24.toTop(); });\n    i0.ɵɵtext(14, \"Nach oben\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const post_r16 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", post_r16.title.rendered, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", post_r16.acf.page.post_title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", post_r16.acf.schlagworte.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", post_r16.acf.showcaseFormat)(\"image\", post_r16.acf.showcase)(\"video\", post_r16.acf.youtube);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", post_r16.acf.beschreibung, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"data\", post_r16.acf);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", post_r16.acf.galerie.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", post_r16.acf.galerie);\n} }\nfunction PostDetailComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PostDetailComponent_ng_container_0_section_1_Template, 15, 10, \"section\", 0);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    const _r11 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx_r10.post$))(\"ngIfElse\", _r11);\n} }\nfunction PostDetailComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 16);\n    i0.ɵɵtext(3, \"\\uD83D\\uDE3F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Projekt mit ID \\u00BB\", ctx_r12.rawId, \"\\u00AB nicht gefunden. \");\n} }\nfunction PostDetailComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1, \"Wird geladen... \");\n    i0.ɵɵelement(2, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n} }\nexport class PostDetailComponent {\n    constructor(route, store) {\n        this.store = store;\n        this.rawId = route.snapshot.paramMap.get('id');\n        this.id = Number(this.rawId);\n        this.postEntity$ = this.postEntityByIdFn$.pipe(map(postEntityById => postEntityById(this.id)));\n        this.post$ = this.postEntity$.pipe(map(post => post.entity));\n        this.isFetching$ = this.postEntity$.pipe(map(post => post.isFetching));\n    }\n    ngOnInit() {\n        this.store.dispatch(new GetPost(this.id)).subscribe();\n    }\n    toTop() {\n        document.body.scrollIntoView({ block: 'start', behavior: 'smooth' });\n    }\n}\nPostDetailComponent.ɵfac = function PostDetailComponent_Factory(t) { return new (t || PostDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Store)); };\nPostDetailComponent.ɵcmp = i0.ɵɵdefineComponent({ type: PostDetailComponent, selectors: [[\"app-post-detail\"]], decls: 6, vars: 4, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"notFound\", \"\"], [\"loadingSpinner\", \"\"], [3, \"innerHTML\"], [1, \"post-detail__category\"], [\"class\", \"post-detail__category__tags\", 4, \"ngIf\"], [3, \"type\", \"image\", \"video\"], [3, \"data\"], [4, \"ngIf\"], [3, \"src\", \"alt\", \"width\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"post-detail__footer\"], [\"type\", \"button\", 3, \"click\"], [1, \"post-detail__category__tags\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\", \"alt\", \"width\", \"height\"], [1, \"post-detail__status-msg\"], [\"role\", \"img\", \"aria-label\", \"Sad cat\", 2, \"font-style\", \"normal\"]], template: function PostDetailComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, PostDetailComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, PostDetailComponent_ng_template_2_Template, 4, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(4, PostDetailComponent_ng_template_4_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r13 = i0.ɵɵreference(5);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.isFetching$) === false)(\"ngIfElse\", _r13);\n    } }, directives: [i3.NgIf, i4.ShowcaseComponent, i5.BriefingComponent, i3.NgForOf, i6.LoadingSpinnerComponent], pipes: [i3.AsyncPipe], styles: [\".post-detail__category[_ngcontent-%COMP%]{font-weight:500;margin-top:0;margin-bottom:1.5em}.post-detail__category__tags[_ngcontent-%COMP%]{opacity:.6;font-weight:400;font-style:italic}.post-detail__category__tags[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:not(:first-child)::before{content:', '}.post-detail__status-msg[_ngcontent-%COMP%]{text-align:center;font-style:italic;font-weight:bolder}.post-detail__footer[_ngcontent-%COMP%]{margin-top:1rem;text-align:center}\"] });\n__decorate([\n    Select(PortfolioSelectors.postEntityByIdFn)\n], PostDetailComponent.prototype, \"postEntityByIdFn$\", void 0);\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PostDetailComponent, [{\n        type: Component,\n        args: [{\n                selector: 'app-post-detail',\n                templateUrl: './post-detail.component.html',\n                styleUrls: ['./post-detail.component.css'],\n            }]\n    }], function () { return [{ type: i1.ActivatedRoute }, { type: i2.Store }]; }, { postEntityByIdFn$: [] }); })();\n","<ng-container *ngIf=\"(isFetching$ | async) === false; else loadingSpinner\">\r\n  <section *ngIf=\"post$ | async as post; else notFound\">\r\n    <h2 [innerHTML]=\"post.title.rendered\"></h2>\r\n    <p class=\"post-detail__category\">\r\n      {{ post.acf.page.post_title }}\r\n      <span *ngIf=\"post.acf.schlagworte.length\" class=\"post-detail__category__tags\">\r\n        – <span *ngFor=\"let tag of post.acf.schlagworte\">{{ tag.name }}</span>\r\n      </span>\r\n    </p>\r\n\r\n    <app-showcase\r\n      [type]=\"post.acf.showcaseFormat\"\r\n      [image]=\"post.acf.showcase\"\r\n      [video]=\"post.acf.youtube\"\r\n    ></app-showcase>\r\n    <p [innerHTML]=\"post.acf.beschreibung\"></p>\r\n\r\n    <h3>Steckbrief</h3>\r\n    <app-briefing [data]=\"post.acf\"></app-briefing>\r\n\r\n    <h3 *ngIf=\"post.acf.galerie.length\">Galerie</h3>\r\n    <img\r\n      *ngFor=\"let image of post.acf.galerie\"\r\n      [src]=\"image.sizes.medium\"\r\n      [alt]=\"image.alt || image.title || image.name || ''\"\r\n      [width]=\"image.sizes['medium-width']\"\r\n      [height]=\"image.sizes['medium-height']\"\r\n    />\r\n\r\n    <footer class=\"post-detail__footer\">\r\n      <button type=\"button\" (click)=\"toTop()\">Nach oben</button>\r\n    </footer>\r\n  </section>\r\n</ng-container>\r\n\r\n<ng-template #notFound>\r\n  <p class=\"post-detail__status-msg\">\r\n    Projekt mit ID »{{ rawId }}« nicht gefunden.\r\n    <span style=\"font-style: normal;\" role=\"img\" aria-label=\"Sad cat\">😿</span>\r\n  </p>\r\n</ng-template>\r\n\r\n<ng-template #loadingSpinner>\r\n  <p class=\"post-detail__status-msg\">Wird geladen... <app-loading-spinner></app-loading-spinner></p>\r\n</ng-template>\r\n","import { Routes, RouterModule } from '@angular/router'\r\nimport { PostMasterComponent } from './views/post-master/post-master.component'\r\nimport { PostDetailComponent } from './views/post-detail/post-detail.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostMasterComponent },\r\n  { path: ':id', component: PostDetailComponent },\r\n]\r\n\r\nexport const PortfolioRoutes = RouterModule.forChild(routes)\r\n","import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { Store, Select } from '@ngxs/store'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { GetPost } from '../../store/portfolio.actions'\r\nimport { PortfolioSelectors } from '../../store/portfolio.selectors'\r\n\r\ntype PostEntityByIdFn = ReturnType<typeof PortfolioSelectors.postEntityByIdFn>\r\n\r\n@Component({\r\n  selector: 'app-post-detail',\r\n  templateUrl: './post-detail.component.html',\r\n  styleUrls: ['./post-detail.component.css'],\r\n})\r\nexport class PostDetailComponent implements OnInit {\r\n  @Select(PortfolioSelectors.postEntityByIdFn) postEntityByIdFn$: Observable<PostEntityByIdFn>\r\n  rawId: string\r\n  id: number\r\n\r\n  postEntity$: Observable<ReturnType<PostEntityByIdFn>>\r\n  post$: Observable<ReturnType<PostEntityByIdFn>['entity']>\r\n  isFetching$: Observable<boolean>\r\n\r\n  constructor(route: ActivatedRoute, private store: Store) {\r\n    this.rawId = route.snapshot.paramMap.get('id')\r\n    this.id = Number(this.rawId)\r\n\r\n    this.postEntity$ = this.postEntityByIdFn$.pipe(map(postEntityById => postEntityById(this.id)))\r\n    this.post$ = this.postEntity$.pipe(map(post => post.entity))\r\n    this.isFetching$ = this.postEntity$.pipe(map(post => post.isFetching))\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetPost(this.id)).subscribe()\r\n  }\r\n\r\n  toTop() {\r\n    document.body.scrollIntoView({ block: 'start', behavior: 'smooth' })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { YouTubePlayerModule } from '@angular/youtube-player'\r\nimport { LoadingSpinnerModule } from 'src/app/shared/components/loading-spinner/loading-spinner.module'\r\n\r\nimport { PostDetailComponent } from './post-detail.component'\r\nimport { ShowcaseComponent } from '../../components/showcase/showcase.component'\r\nimport { BriefingComponent } from '../../components/briefing/briefing.component'\r\n\r\n@NgModule({\r\n  imports: [CommonModule, YouTubePlayerModule, LoadingSpinnerModule],\r\n  declarations: [PostDetailComponent, ShowcaseComponent, BriefingComponent],\r\n})\r\nexport class PostDetailModule {}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { PostMasterComponent } from './post-master.component'\r\nimport { RouterModule } from '@angular/router'\r\nimport { LoadingSpinnerModule } from 'src/app/shared/components/loading-spinner/loading-spinner.module'\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, LoadingSpinnerModule],\r\n  providers: [],\r\n  declarations: [PostMasterComponent],\r\n})\r\nexport class PostMasterModule {}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { LoadingSpinnerComponent } from './loading-spinner.component'\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [LoadingSpinnerComponent],\r\n  exports: [LoadingSpinnerComponent],\r\n})\r\nexport class LoadingSpinnerModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingSpinnerComponent } from './loading-spinner.component';\nimport * as i0 from \"@angular/core\";\nexport class LoadingSpinnerModule {\n}\nLoadingSpinnerModule.ɵmod = i0.ɵɵdefineNgModule({ type: LoadingSpinnerModule });\nLoadingSpinnerModule.ɵinj = i0.ɵɵdefineInjector({ factory: function LoadingSpinnerModule_Factory(t) { return new (t || LoadingSpinnerModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LoadingSpinnerModule, { declarations: [LoadingSpinnerComponent], imports: [CommonModule], exports: [LoadingSpinnerComponent] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LoadingSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LoadingSpinnerComponent],\n                exports: [LoadingSpinnerComponent],\n            }]\n    }], null, null); })();\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostMasterComponent } from './post-master.component';\nimport { RouterModule } from '@angular/router';\nimport { LoadingSpinnerModule } from 'src/app/shared/components/loading-spinner/loading-spinner.module';\nimport * as i0 from \"@angular/core\";\nexport class PostMasterModule {\n}\nPostMasterModule.ɵmod = i0.ɵɵdefineNgModule({ type: PostMasterModule });\nPostMasterModule.ɵinj = i0.ɵɵdefineInjector({ factory: function PostMasterModule_Factory(t) { return new (t || PostMasterModule)(); }, providers: [], imports: [[CommonModule, RouterModule, LoadingSpinnerModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PostMasterModule, { declarations: [PostMasterComponent], imports: [CommonModule, RouterModule, LoadingSpinnerModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PostMasterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, RouterModule, LoadingSpinnerModule],\n                providers: [],\n                declarations: [PostMasterComponent],\n            }]\n    }], null, null); })();\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { LoadingSpinnerModule } from 'src/app/shared/components/loading-spinner/loading-spinner.module';\nimport { PostDetailComponent } from './post-detail.component';\nimport { ShowcaseComponent } from '../../components/showcase/showcase.component';\nimport { BriefingComponent } from '../../components/briefing/briefing.component';\nimport * as i0 from \"@angular/core\";\nexport class PostDetailModule {\n}\nPostDetailModule.ɵmod = i0.ɵɵdefineNgModule({ type: PostDetailModule });\nPostDetailModule.ɵinj = i0.ɵɵdefineInjector({ factory: function PostDetailModule_Factory(t) { return new (t || PostDetailModule)(); }, imports: [[CommonModule, YouTubePlayerModule, LoadingSpinnerModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PostDetailModule, { declarations: [PostDetailComponent, ShowcaseComponent, BriefingComponent], imports: [CommonModule, YouTubePlayerModule, LoadingSpinnerModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PostDetailModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, YouTubePlayerModule, LoadingSpinnerModule],\n                declarations: [PostDetailComponent, ShowcaseComponent, BriefingComponent],\n            }]\n    }], null, null); })();\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { NgxsModule } from '@ngxs/store'\r\nimport { PortfolioRoutes } from './portfolio.module.routing'\r\nimport { PostMasterModule } from './views/post-master/post-master.module'\r\nimport { PostDetailModule } from './views/post-detail/post-detail.module'\r\n\r\nimport { PortfolioState } from './store/portfolio.state'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PortfolioRoutes,\r\n    PostMasterModule,\r\n    PostDetailModule,\r\n    NgxsModule.forFeature([PortfolioState]),\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class PortfolioModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxsModule } from '@ngxs/store';\nimport { PortfolioRoutes } from './portfolio.module.routing';\nimport { PostMasterModule } from './views/post-master/post-master.module';\nimport { PostDetailModule } from './views/post-detail/post-detail.module';\nimport { PortfolioState } from './store/portfolio.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nexport class PortfolioModule {\n}\nPortfolioModule.ɵmod = i0.ɵɵdefineNgModule({ type: PortfolioModule });\nPortfolioModule.ɵinj = i0.ɵɵdefineInjector({ factory: function PortfolioModule_Factory(t) { return new (t || PortfolioModule)(); }, imports: [[\n            CommonModule,\n            PortfolioRoutes,\n            PostMasterModule,\n            PostDetailModule,\n            NgxsModule.forFeature([PortfolioState]),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PortfolioModule, { imports: [CommonModule, i1.RouterModule, PostMasterModule,\n        PostDetailModule, i2.NgxsFeatureModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PortfolioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    PortfolioRoutes,\n                    PostMasterModule,\n                    PostDetailModule,\n                    NgxsModule.forFeature([PortfolioState]),\n                ],\n                declarations: [],\n            }]\n    }], null, null); })();\n"]}