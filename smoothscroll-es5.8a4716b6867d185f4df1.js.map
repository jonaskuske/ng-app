{"version":3,"mappings":"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","names":["module","exports","polyfill","w","window","d","document","documentElement","style","__forceSmoothScrollPolyfill__","userAgent","Element","HTMLElement","original","scroll","scrollTo","scrollBy","elementScroll","prototype","scrollElement","scrollIntoView","now","performance","bind","Date","ROUNDING_TOLERANCE","navigator","RegExp","join","test","arguments","shouldBailOut","call","left","scrollX","pageXOffset","top","scrollY","pageYOffset","smoothScroll","body","SyntaxError","this","scrollLeft","scrollTop","behavior","scrollableParent","findScrollableParent","parentRects","getBoundingClientRect","clientRects","getComputedStyle","position","x","y","firstArg","TypeError","el","axis","clientHeight","scrollHeight","clientWidth","scrollWidth","overflowValue","isScrollableY","hasScrollableSpace","canOverflow","isScrollableX","isScrollable","parentNode","host","context","value","currentX","currentY","elapsed","startTime","k","Math","cos","PI","method","scrollable","startX","startY","requestAnimationFrame","step","pendingFocusChange","isBrowser","docEl","mockEl","createElement","getAnchor","tagName","anchor","href","pathname","hostname","location","search","parentElement","getScrollTarget","hash","decodeURIComponent","_unused","target","getElementById","slice","focusElement","focusOptions","preventScroll","focus","activeElement","prevTabIndex","getAttribute","setAttribute","outlineStyle","prevOutline","addEventListener","removeAttribute","removeEventListener","undoOutlineChange","supportsPreventScroll","preppedFocusOption","Object","defineProperty","get","_unused2","triggerSmoothscroll","clearTimeout","t","block","setTimeout","shouldSmoothscroll","extractValue","docElStyle","valuesToCheck","scrollBehavior","exec","getPropertyValue","fontFamily","i","length","trim","defaultExport","destroy","opts","globalFlag","__forceSmoothscrollAnchorPolyfill__","force","handleClick","trackScrollPositions","handleHashChange","evt","defaultPrevented","metaKey","ctrlKey","shiftKey","button","preventDefault","history","pushState","title","lastTwoScrollPos","getScrollTop","currentPos"],"sources":["webpack:///node_modules/smoothscroll-polyfill/dist/smoothscroll.js","webpack:///node_modules/smoothscroll-anchor-polyfill/dist/index.mjs"],"sourcesContent":["/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n\n}());\n","/** @license MIT smoothscroll-anchor-polyfill@1.3.3 (c) 2021 Jonas Kuske */\n// @ts-check\n\n/**\n * @typedef {Object} GlobalFlag\n * @prop {boolean} [__forceSmoothscrollAnchorPolyfill__]\n * **DEPRECATED**: use `polyfill({ force: boolean })`\n *\n * @typedef {typeof globalThis & Window & GlobalFlag} WindowWithFlag\n */\n\n/***/\nconst isBrowser = typeof window !== 'undefined';\nconst w = isBrowser &&\n/** @type {WindowWithFlag} */\nwindow;\nconst d = isBrowser && document;\nconst docEl = isBrowser && d.documentElement;\nconst mockEl = isBrowser && d.createElement('a');\n\nconst hasNativeSupport = () => isBrowser && 'scrollBehavior' in mockEl;\n/**\n * @param {HTMLElement} el\n * @returns {el is HTMLAnchorElement}\n */\n\n\nconst isAnchor = el => /^a$/i.test(el.tagName);\n/**\n * Check if an element is an anchor pointing to a target on the current page\n * @param {HTMLAnchorElement} anchor\n */\n\n\nconst targetsLocalElement = anchor => {\n  // False if element isn't \"a\" or href has no #fragment\n  if (!/#/.test(anchor.href)) return false; // Fix bug in IE9 where anchor.pathname misses leading slash\n\n  let pathname =\n  /** @type {HTMLAnchorElement} */\n  anchor.pathname;\n  if (pathname[0] !== '/') pathname = '/' + pathname; // False if target isn't current page\n\n  if (anchor.hostname !== location.hostname || pathname !== location.pathname) return false; // False if anchor targets a ?query that is different from the current one\n  // e.g. /?page=1 → /?page=2#content\n\n  if (anchor.search && anchor.search !== location.search) return false;\n  return true;\n};\n/**\n * @param {HTMLElement} el\n * @returns {?HTMLAnchorElement} The found element or null\n */\n\n\nconst getAnchor = el => {\n  if (isAnchor(el) && targetsLocalElement(el)) return el;\n  return el.parentElement ? getAnchor(el.parentElement) : null;\n};\n/**\n * Returns the element whose id matches the hash or\n * document.body if the hash is \"#top\" or \"\" (empty string)\n * @param {string} hash\n */\n\n\nconst getScrollTarget = hash => {\n  if (typeof hash !== 'string') return null;\n\n  try {\n    hash = decodeURIComponent(hash); // \"#%F0%9F%91%8D%F0%9F%8F%BB\" -> \"#👍🏻\"\n  } catch (_unused) {} // Retrieve target if an id is specified in the hash, otherwise use body.\n  // If hash is \"#top\" and no target with id \"top\" was found, also use body\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href\n\n\n  let target = hash ? d.getElementById(hash.slice(1)) : d.body;\n  if (hash === '#top' && !target) target = d.body;\n  return target;\n};\n/**\n * Focuses an element, if it's not focused after the first try,\n * allow focusing by adjusting tabIndex and retry\n * @param {HTMLElement} el\n */\n\n\nconst focusElement = el => {\n  const focusOptions = {\n    preventScroll: true\n  };\n  el.focus(focusOptions);\n\n  if (d.activeElement !== el) {\n    const prevTabIndex = el.getAttribute('tabindex');\n    el.setAttribute('tabindex', '-1');\n\n    if (getComputedStyle(el).outlineStyle === 'none') {\n      const prevOutline = el.style.outlineStyle;\n      el.style.outlineStyle = 'none';\n      el.addEventListener('blur', function undoOutlineChange() {\n        el.style.outlineStyle = prevOutline || '';\n        prevTabIndex != null ? el.setAttribute('tabindex', prevTabIndex) : el.removeAttribute('tabindex');\n        el.removeEventListener('blur', undoOutlineChange);\n      });\n    }\n\n    el.focus(focusOptions);\n  }\n}; // Stores the setTimeout id of pending focus changes, allows aborting them\n\n\nlet pendingFocusChange; // Check if browser supports focus without automatic scrolling (preventScroll)\n\nlet supportsPreventScroll = false;\n\nif (isBrowser) {\n  try {\n    // Define getter for preventScroll to find out if the browser accesses it\n    const preppedFocusOption = Object.defineProperty({}, 'preventScroll', {\n      // eslint-disable-next-line getter-return\n      get() {\n        supportsPreventScroll = true;\n      }\n\n    }); // Trigger focus – if browser uses preventScroll the const will be set to true\n\n    mockEl.focus(preppedFocusOption);\n  } catch (_unused2) {}\n}\n/**\n * Scrolls to a given element or to the top if the given element\n * is document.body, then focuses the element\n * @param {HTMLElement} target\n */\n\n\nconst triggerSmoothscroll = target => {\n  // Clear potential pending focus change triggered by a previous scroll\n  if (!supportsPreventScroll) clearTimeout(pendingFocusChange); // Use JS scroll APIs to scroll to top (if target is body) or to the element\n  // This allows polyfills for these APIs to do their smooth scrolling magic\n\n  const scrollTop = target === d.body;\n  if (scrollTop) w.scroll({\n    top: 0,\n    left: 0,\n    behavior: 'smooth'\n  });else target.scrollIntoView({\n    behavior: 'smooth',\n    block: 'start'\n  }); // If the browser supports preventScroll: immediately focus the target\n  // Otherwise schedule the focus so the smoothscroll isn't interrupted\n\n  if (supportsPreventScroll) focusElement(target);else pendingFocusChange = setTimeout(focusElement.bind(null, target), 450);\n};\n/**\n * Returns true if scroll-behavior: smooth is set and not overwritten\n * by a higher-specifity declaration, else returns false\n */\n\n\nconst shouldSmoothscroll = () => {\n  // Regex to extract the value following the scroll-behavior property name\n  const extractValue = /scroll-behavior:[\\s]*([^;\"']+)/;\n  const docElStyle = getComputedStyle(docEl); // Values to check for set scroll-behavior in order of priority/specificity\n\n  const valuesToCheck = [// Priority 1: behavior assigned to style property\n  // Allows toggling smoothscroll from JS (docEl.style.scrollBehavior = ...)\n  docEl.style.scrollBehavior, // Priority 2: behavior specified inline in style attribute\n  (extractValue.exec(docEl.getAttribute('style')) || [])[1], // Priority 3: custom property\n  // Behaves like regular CSS, e.g. allows using media queries\n  docElStyle.getPropertyValue('--scroll-behavior'), // Priority 4: behavior specified in fontFamily\n  // Same use case as priority 3, but supports legacy browsers without CSS vars\n  (extractValue.exec(docElStyle.fontFamily) || [])[1]]; // Loop over values in specified order, return once a valid value is found\n\n  for (var i = 0; i < valuesToCheck.length; i++) {\n    const value = valuesToCheck[i] && valuesToCheck[i].trim();\n    if (/^smooth$/.test(value)) return true;\n    if (/^(initial|inherit|auto|unset)$/.test(value)) return false;\n  } // No value found? Return false, no set value = no smoothscroll :(\n\n\n  return false;\n}; // @ts-check\n\n\nconst defaultExport = {\n  polyfill,\n  destroy\n};\n/**\n * Starts the polyfill by attaching the neccessary EventListeners\n *\n * Bails out if scrollBehavior is natively supported and the force flag\n * isn't set on the options argument or globally on window\n * @param {PolyfillOptions} [opts] Options for invoking the polyfill\n *\n * @typedef {Object} PolyfillOptions\n * @prop {boolean} [force] Enable despite native support, overrides global flag\n */\n\nfunction polyfill(opts = {}) {\n  destroy(); // Remove previous listeners\n\n  if (isBrowser) {\n    const globalFlag = w.__forceSmoothscrollAnchorPolyfill__;\n    const force = typeof opts.force === 'boolean' ? opts.force : globalFlag; // Abort if smoothscroll has native support and force flag isn't set\n\n    if (hasNativeSupport() && !force) return;\n    d.addEventListener('click', handleClick, false);\n    d.addEventListener('scroll', trackScrollPositions);\n    w.addEventListener('hashchange', handleHashChange);\n  }\n\n  return defaultExport;\n}\n/** Stops the polyfill by removing all EventListeners */\n\n\nfunction destroy() {\n  if (isBrowser) {\n    d.removeEventListener('click', handleClick, false);\n    d.removeEventListener('scroll', trackScrollPositions);\n    w.removeEventListener('hashchange', handleHashChange);\n  }\n\n  return defaultExport;\n}\n/**\n * Checks if the clicked target is an anchor pointing to a local element.\n * If so, prevents default behavior and handles the scroll using the\n * native JavaScript scroll APIs so smoothscroll-polyfill applies\n * @param {MouseEvent} evt\n */\n\n\nfunction handleClick(evt) {\n  const notPrimaryClick = evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.button !== 0;\n  if (evt.defaultPrevented || notPrimaryClick) return; // scroll-behavior not set to smooth? Bail out, let browser handle it\n\n  if (!shouldSmoothscroll()) return; // Check the DOM from the click target upwards if a local anchor was clicked\n\n  const anchor = getAnchor(\n  /** @type {HTMLElement} */\n  evt.target);\n  if (!anchor) return; // Find the element targeted by the hash\n\n  const target = getScrollTarget(anchor.hash);\n\n  if (target) {\n    // Prevent default browser behavior to avoid a jump to the anchor target\n    evt.preventDefault(); // Trigger the smooth scroll\n\n    triggerSmoothscroll(target); // Append the hash to the URL\n\n    if (history.pushState) history.pushState(null, d.title, anchor.hash || '#');\n  }\n} // To enable smooth scrolling on hashchange, we need to immediately restore\n// the scroll pos after a hashchange changed it, so we track it constantly.\n// Some browsers don't trigger a scroll event before the hashchange,\n// so to undo, the position from last scroll is the one we need to go back to.\n// In others (e.g. IE) the scroll listener is triggered again before the\n// hashchange occurs and the last reported position is already the new one\n// updated by the hashchange – we need the second last to undo there.\n// Because of this we don't track just the last, but the last two positions.\n\n\nconst lastTwoScrollPos = [];\n/** Returns the scroll offset towards the top */\n\nconst getScrollTop = () => docEl.scrollTop || d.body.scrollTop;\n/**\n * Tries to undo the automatic, instant scroll caused by a hashchange\n * and instead scrolls smoothly to the new hash target\n */\n\n\nfunction handleHashChange() {\n  // scroll-behavior not set to smooth or body not parsed yet? Abort\n  if (!d.body || !shouldSmoothscroll()) return;\n  const target = getScrollTarget(location.hash);\n  if (!target) return; // If the position last reported by the scroll listener is the same as the\n  // current one caused by a hashchange, go back to second last – else last\n\n  const currentPos = getScrollTop();\n  const top = lastTwoScrollPos[lastTwoScrollPos[1] === currentPos ? 0 : 1]; // @ts-ignore\n  // Undo the scroll caused by the hashchange...\n  // Using {behavior: 'instant'} even though it's not in the spec anymore as\n  // Blink & Gecko support it – once an engine with native support doesn't,\n  // we need to disable scroll-behavior during scroll reset, then restore\n\n  w.scroll({\n    top,\n    behavior: 'instant'\n  }); // ...and instead smoothscroll to the target\n\n  triggerSmoothscroll(target);\n}\n/** Update the last two scroll positions */\n\n\nfunction trackScrollPositions() {\n  if (!d.body) return; // Body not parsed yet? Abort\n\n  lastTwoScrollPos[0] = lastTwoScrollPos[1];\n  lastTwoScrollPos[1] = getScrollTop();\n}\n\npolyfill();\nexport { defaultExport as default, destroy, polyfill };\n"]}